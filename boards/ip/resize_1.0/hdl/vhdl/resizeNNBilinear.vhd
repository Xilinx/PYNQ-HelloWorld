-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resizeNNBilinear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgInput_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgInput_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgInput_data_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    imgInput_data_V_empty_n : IN STD_LOGIC;
    imgInput_data_V_read : OUT STD_LOGIC;
    imgOutput_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgOutput_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    imgOutput_data_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    imgOutput_data_V_full_n : IN STD_LOGIC;
    imgOutput_data_V_write : OUT STD_LOGIC );
end;


architecture behav of resizeNNBilinear is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal imgInput_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln331_reg_2129 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln387_reg_2303 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln387_reg_2303_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln403_reg_2240 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_2317 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_2317_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal imgOutput_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal icmp_ln484_reg_2249 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_365 : STD_LOGIC_VECTOR (32 downto 0);
    signal read_rows_count_0_reg_376 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_0_reg_387 : STD_LOGIC_VECTOR (30 downto 0);
    signal j13_0_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal j13_0_reg_445_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state11_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op186_read_state14 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter9 : BOOLEAN;
    signal ap_predicate_op398_write_state21 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j13_0_reg_445_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal j13_0_reg_445_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal P0Buf_0_V_3_reg_473 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_2_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal reg_568 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal icmp_ln387_reg_2303_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_reg_2254 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln441_reg_2272 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_0_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal reg_574 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal reg_580 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_2_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal icmp_ln387_reg_2303_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_0_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal xnew_fu_604_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xnew_reg_2073 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln304_fu_613_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln304_reg_2078 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xfUDivResize_fu_518_ap_ready : STD_LOGIC;
    signal grp_xfUDivResize_fu_518_ap_done : STD_LOGIC;
    signal ynew_fu_618_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ynew_reg_2099 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln305_fu_627_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln305_reg_2104 : STD_LOGIC_VECTOR (15 downto 0);
    signal scalex_V_fu_632_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal scalex_V_reg_2109 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_xfUDivResize_fu_518_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal Yscale64_reg_2114 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal scaley_V_fu_636_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal scaley_V_reg_2119 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_4_fu_640_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_4_reg_2124 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln331_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln331_fu_661_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln321_1_fu_681_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln321_1_reg_2138 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_fu_689_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_reg_2143 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_0_0_V_s_reg_2147 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_1_0_V_s_reg_2152 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_fu_699_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal loop_row_count_fu_709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_row_count_reg_2182 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal loop_col_count_fu_719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_col_count_reg_2187 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_12_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_12_reg_2192 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln484_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln484_reg_2197 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_fu_744_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_6_reg_2202 : STD_LOGIC_VECTOR (41 downto 0);
    signal rhs_V_fu_748_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal rhs_V_reg_2207 : STD_LOGIC_VECTOR (42 downto 0);
    signal shl_ln728_3_fu_757_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal shl_ln728_3_reg_2212 : STD_LOGIC_VECTOR (53 downto 0);
    signal indexy_pre_V_fu_774_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexy_pre_V_reg_2217 : STD_LOGIC_VECTOR (41 downto 0);
    signal shl_ln728_6_fu_782_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal shl_ln728_6_reg_2222 : STD_LOGIC_VECTOR (53 downto 0);
    signal indexx_pre_V_fu_799_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_V_reg_2227 : STD_LOGIC_VECTOR (41 downto 0);
    signal i_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_2235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln403_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln380_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln484_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln420_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln485_fu_844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln485_reg_2258 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln486_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln486_reg_2266 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln441_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_fu_866_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln1192_reg_2276 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_s_reg_2282 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_920_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_9_reg_2287 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_1_reg_2293 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln728_fu_936_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln728_reg_2298 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln387_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln387_reg_2303_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln387_reg_2303_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_2307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln728_1_fu_1029_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_1_reg_2312_pp1_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln406_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_2317_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_2321_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln485_reg_2327_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_2331_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln487_1_reg_2335_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_fu_1118_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal select_ln1495_reg_2339 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln851_4_fu_1126_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln851_4_reg_2344 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_reg_2349 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln396_1_fu_1140_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln396_1_reg_2356 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln426_fu_1214_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln426_reg_2361 : STD_LOGIC_VECTOR (17 downto 0);
    signal line_buffer_2_0_V_1_gep_fu_276_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_0_0_V_1_gep_fu_290_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_1_0_V_1_gep_fu_297_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_2398 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_2398_pp1_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_2398_pp1_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_2398_pp1_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln647_fu_1277_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2434 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2434_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2434_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_2_reg_2440 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_4_reg_2446 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_2_reg_2452 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1354_fu_1393_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_reg_2457 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_2_fu_1405_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1354_2_reg_2462 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_2_fu_1986_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_2_reg_2467 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1354_3_fu_1484_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_3_reg_2472 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_5_fu_1496_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1354_5_reg_2477 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_5_fu_1992_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_5_reg_2482 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1354_6_fu_1571_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_6_reg_2487 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_8_fu_1583_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1354_8_reg_2492 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_8_fu_1998_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_8_reg_2497 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2004_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_1_reg_2502 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal grp_fu_2021_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_4_reg_2507 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2038_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_7_reg_2512 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln850_fu_1697_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_reg_2517 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_3_fu_1767_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_3_reg_2522 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_4_fu_1837_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_4_reg_2527 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln506_fu_1898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal read_rows_count_3_fu_1950_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_1_fu_1971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal line_buffer_0_0_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_0_0_V_ce0 : STD_LOGIC;
    signal line_buffer_0_0_V_we0 : STD_LOGIC;
    signal line_buffer_0_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_0_0_V_ce1 : STD_LOGIC;
    signal line_buffer_1_0_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_1_0_V_ce0 : STD_LOGIC;
    signal line_buffer_1_0_V_we0 : STD_LOGIC;
    signal line_buffer_1_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_1_0_V_ce1 : STD_LOGIC;
    signal line_buffer_2_0_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_2_0_V_ce0 : STD_LOGIC;
    signal line_buffer_2_0_V_we0 : STD_LOGIC;
    signal line_buffer_2_0_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_2_0_V_ce1 : STD_LOGIC;
    signal grp_xfUDivResize_fu_518_ap_start : STD_LOGIC;
    signal grp_xfUDivResize_fu_518_ap_idle : STD_LOGIC;
    signal grp_xfUDivResize_fu_518_in_n : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_xfUDivResize_fu_518_in_d : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_scaleCompute_fu_535_currindex : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaleCompute_fu_535_inscale_V : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_scaleCompute_fu_535_ap_return : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_scaleCompute_fu_535_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state11_pp1_stage0_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2_ignore_call3 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3_ignore_call3 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter4_ignore_call3 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter5_ignore_call3 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter6_ignore_call3 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter7_ignore_call3 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter8_ignore_call3 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter9_ignore_call3 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter10_ignore_call3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp137 : BOOLEAN;
    signal ap_phi_mux_read_rows_count_0_phi_fu_380_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_rows_count_1_reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_rows_count_0_reg_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal indexstores_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal i12_0_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j13_0_phi_fu_449_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_flag_write_2_phi_fu_462_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_flag_write_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_flag_write_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter2_flag_write_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter3_flag_write_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter4_flag_write_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfUDivResize_fu_518_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln342_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln428_fu_1220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln480_fu_1230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln459_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln438_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln471_fu_1255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln450_fu_1260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln429_fu_1265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal read_pixel_V_1_fu_170 : STD_LOGIC_VECTOR (23 downto 0);
    signal indexy_V_fu_174 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_fu_1022_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_1_fu_178 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_fu_983_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln336_fu_647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln336_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln346_fu_675_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln321_fu_667_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln352_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln354_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_735_p4 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_Val2_8_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln241_fu_765_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln728_fu_768_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln258_fu_790_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln728_1_fu_793_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_V_fu_862_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln1192_fu_866_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal lhs_V_fu_862_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_fu_871_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_9_fu_884_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal zext_ln1494_fu_892_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal zext_ln1494_fu_892_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_9_fu_884_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1494_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1494_fu_913_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal select_ln1494_fu_913_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln851_fu_951_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_3_fu_960_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln851_3_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_fu_969_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln851_fu_975_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln851_3_fu_990_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_999_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln851_4_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_1_fu_1008_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln851_1_fu_1014_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln891_fu_1033_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln406_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln406_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_1_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln879_1_fu_1059_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_3_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1494_1_fu_1102_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln1494_1_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln257_fu_1111_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln851_5_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_2_fu_1161_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_1149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_1166_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal indexx_0_V_fu_1173_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln396_fu_1180_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln_fu_1184_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln425_fu_1197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln426_fu_1205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln426_fu_1201_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln426_1_fu_1210_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln396_fu_1192_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln488_1_fu_1270_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_5_fu_1301_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln728_fu_1308_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln488_fu_1313_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln6_fu_1320_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1979_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln647_3_fu_1338_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_fu_1358_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_1_fu_1361_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln647_1_fu_1330_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_2_fu_1334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_2_fu_1371_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_3_fu_1375_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_fu_1365_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_1_fu_1379_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_4_fu_1385_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_5_fu_1389_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_1_fu_1399_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i33_3_fu_1439_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_6_fu_1449_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_7_fu_1452_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i33_2_fu_1419_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_3_fu_1429_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_8_fu_1462_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_9_fu_1466_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_2_fu_1456_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_3_fu_1470_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_10_fu_1476_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_11_fu_1480_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_4_fu_1490_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i33_5_fu_1526_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_12_fu_1536_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_13_fu_1539_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i33_4_fu_1506_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i35_5_fu_1516_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_14_fu_1549_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_15_fu_1553_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_4_fu_1543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_5_fu_1557_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_16_fu_1563_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_17_fu_1567_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_7_fu_1577_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2012_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2029_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2046_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1_fu_1635_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_1_fu_1642_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_fu_1645_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_2_fu_1649_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_5_fu_1663_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln7_fu_1673_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_3_fu_1683_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_1689_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln728_1_fu_1705_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_3_fu_1712_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_1_fu_1715_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_5_fu_1719_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_6_fu_1733_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln851_1_fu_1743_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_1_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_4_fu_1753_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_4_fu_1759_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln728_2_fu_1775_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_5_fu_1782_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_2_fu_1785_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_8_fu_1789_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_7_fu_1803_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln851_2_fu_1813_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_2_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_5_fu_1823_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_5_fu_1829_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln879_fu_1859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln507_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln508_fu_1878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_rows_count_fu_1884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln507_fu_1890_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln891_1_fu_1905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_fu_1914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_rows_count_fu_1926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln891_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln511_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln891_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_2_fu_1932_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln520_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln891_fu_1958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln891_fu_1963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_fu_1979_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1979_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_2_fu_1986_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_3_fu_1415_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_5_fu_1992_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_8_fu_1998_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2004_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_2_fu_1596_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2012_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1118_4_fu_1602_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2021_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2029_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2038_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2046_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal mul_ln1118_fu_1979_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_fu_1979_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_203 : BOOLEAN;
    signal ap_condition_198 : BOOLEAN;
    signal ap_condition_743 : BOOLEAN;
    signal ap_condition_360 : BOOLEAN;
    signal ap_condition_723 : BOOLEAN;
    signal ap_condition_77 : BOOLEAN;
    signal ap_condition_1867 : BOOLEAN;
    signal ap_condition_1872 : BOOLEAN;
    signal ap_condition_446 : BOOLEAN;
    signal ap_condition_453 : BOOLEAN;
    signal ap_condition_1879 : BOOLEAN;

    component xfUDivResize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_n : IN STD_LOGIC_VECTOR (63 downto 0);
        in_d : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component scaleCompute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale_V : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component resize_accel_mul_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resize_accel_mul_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component resize_accel_mac_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resize_accel_mac_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resizeNNBilinear_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buffer_0_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 3840,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_0_V_address0,
        ce0 => line_buffer_0_0_V_ce0,
        we0 => line_buffer_0_0_V_we0,
        d0 => line_buffer_0_0_V_d0,
        q0 => line_buffer_0_0_V_q0,
        address1 => line_buffer_0_0_V_address1,
        ce1 => line_buffer_0_0_V_ce1,
        q1 => line_buffer_0_0_V_q1);

    line_buffer_1_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 3840,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_0_V_address0,
        ce0 => line_buffer_1_0_V_ce0,
        we0 => line_buffer_1_0_V_we0,
        d0 => line_buffer_1_0_V_d0,
        q0 => line_buffer_1_0_V_q0,
        address1 => line_buffer_1_0_V_address1,
        ce1 => line_buffer_1_0_V_ce1,
        q1 => line_buffer_1_0_V_q1);

    line_buffer_2_0_V_U : component resizeNNBilinear_dEe
    generic map (
        DataWidth => 24,
        AddressRange => 3840,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_2_0_V_address0,
        ce0 => line_buffer_2_0_V_ce0,
        we0 => line_buffer_2_0_V_we0,
        d0 => read_pixel_V_1_fu_170,
        q0 => line_buffer_2_0_V_q0,
        address1 => line_buffer_2_0_V_address1,
        ce1 => line_buffer_2_0_V_ce1,
        q1 => line_buffer_2_0_V_q1);

    grp_xfUDivResize_fu_518 : component xfUDivResize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfUDivResize_fu_518_ap_start,
        ap_done => grp_xfUDivResize_fu_518_ap_done,
        ap_idle => grp_xfUDivResize_fu_518_ap_idle,
        ap_ready => grp_xfUDivResize_fu_518_ap_ready,
        in_n => grp_xfUDivResize_fu_518_in_n,
        in_d => grp_xfUDivResize_fu_518_in_d,
        ap_return => grp_xfUDivResize_fu_518_ap_return);

    grp_scaleCompute_fu_535 : component scaleCompute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        currindex => grp_scaleCompute_fu_535_currindex,
        inscale_V => grp_scaleCompute_fu_535_inscale_V,
        ap_return => grp_scaleCompute_fu_535_ap_return,
        ap_ce => grp_scaleCompute_fu_535_ap_ce);

    resize_accel_mul_g8j_U24 : component resize_accel_mul_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1118_fu_1979_p0,
        din1 => mul_ln1118_fu_1979_p1,
        dout => mul_ln1118_fu_1979_p2);

    resize_accel_mul_hbi_U25 : component resize_accel_mul_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_2_fu_1986_p0,
        din1 => sub_ln1354_1_fu_1399_p2,
        dout => mul_ln1118_2_fu_1986_p2);

    resize_accel_mul_hbi_U26 : component resize_accel_mul_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_5_fu_1992_p0,
        din1 => sub_ln1354_4_fu_1490_p2,
        dout => mul_ln1118_5_fu_1992_p2);

    resize_accel_mul_hbi_U27 : component resize_accel_mul_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_8_fu_1998_p0,
        din1 => sub_ln1354_7_fu_1577_p2,
        dout => mul_ln1118_8_fu_1998_p2);

    resize_accel_mac_ibs_U28 : component resize_accel_mac_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_2004_p0,
        din1 => sub_ln1354_reg_2457,
        din2 => grp_fu_2012_p3,
        dout => grp_fu_2004_p3);

    resize_accel_mac_jbC_U29 : component resize_accel_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2012_p0,
        din1 => sub_ln1354_2_reg_2462,
        din2 => mul_ln1118_2_reg_2467,
        dout => grp_fu_2012_p3);

    resize_accel_mac_ibs_U30 : component resize_accel_mac_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_2021_p0,
        din1 => sub_ln1354_3_reg_2472,
        din2 => grp_fu_2029_p3,
        dout => grp_fu_2021_p3);

    resize_accel_mac_jbC_U31 : component resize_accel_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2029_p0,
        din1 => sub_ln1354_5_reg_2477,
        din2 => mul_ln1118_5_reg_2482,
        dout => grp_fu_2029_p3);

    resize_accel_mac_ibs_U32 : component resize_accel_mac_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_2038_p0,
        din1 => sub_ln1354_6_reg_2487,
        din2 => grp_fu_2046_p3,
        dout => grp_fu_2038_p3);

    resize_accel_mac_jbC_U33 : component resize_accel_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2046_p0,
        din1 => sub_ln1354_8_reg_2492,
        din2 => mul_ln1118_8_reg_2497,
        dout => grp_fu_2046_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state11)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state11);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_xfUDivResize_fu_518_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfUDivResize_fu_518_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_xfUDivResize_fu_518_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfUDivResize_fu_518_ap_ready = ap_const_logic_1)) then 
                    grp_xfUDivResize_fu_518_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    P0Buf_0_V_3_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_198)) then 
                    P0Buf_0_V_3_reg_473 <= reg_574;
                elsif ((ap_const_boolean_1 = ap_condition_203)) then 
                    P0Buf_0_V_3_reg_473 <= reg_568;
                elsif (((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1))) then 
                    P0Buf_0_V_3_reg_473 <= reg_580;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    P0Buf_0_V_3_reg_473 <= ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_flag_write_2_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_360)) then
                if ((ap_const_boolean_1 = ap_condition_743)) then 
                    ap_phi_reg_pp1_iter1_flag_write_2_reg_457 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter0_flag_write_2_reg_457;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_flag_write_2_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_723)) then
                if (((icmp_ln403_reg_2240 = ap_const_lv1_1) and (icmp_ln387_reg_2303 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_457 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter1_flag_write_2_reg_457;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter4_flag_write_2_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_77)) then 
                    ap_phi_reg_pp1_iter4_flag_write_2_reg_457 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter4_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter3_flag_write_2_reg_457;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_2_0_V_q1;
                elsif (((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_1_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_198)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_2_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_203)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_1_0_V_q1;
                elsif (((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496;
                end if;
            end if; 
        end if;
    end process;

    i12_0_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i12_0_reg_434 <= i_reg_2235;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i12_0_reg_434 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indexstores_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                indexstores_reg_422 <= first_row_index_1_fu_1971_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexstores_reg_422 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indexy_V_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indexy_V_fu_174 <= tmp_V_fu_1022_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexy_V_fu_174 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_fu_656_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_365 <= add_ln331_fu_661_p2;
            elsif (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_365 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    j13_0_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_reg_2303 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j13_0_reg_445 <= j_1_reg_2307;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j13_0_reg_445 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    j_0_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_fu_656_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_0_reg_387 <= j_fu_699_p2;
            elsif (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_0_reg_387 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                nextYScale_V_1_fu_178 <= nextYScale_V_fu_983_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                nextYScale_V_1_fu_178 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    output_rows_count_0_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                output_rows_count_0_reg_410 <= select_ln506_fu_1898_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                output_rows_count_0_reg_410 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    read_rows_count_0_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_reg_2129 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                read_rows_count_0_reg_376 <= select_ln321_1_reg_2138;
            elsif (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                read_rows_count_0_reg_376 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    read_rows_count_1_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                read_rows_count_1_reg_398 <= read_rows_count_3_fu_1950_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                read_rows_count_1_reg_398 <= ap_const_lv32_2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                Yscale64_reg_2114 <= grp_xfUDivResize_fu_518_ap_return;
                scaley_V_reg_2119 <= scaley_V_fu_636_p1;
                    tmp_4_reg_2124(32 downto 1) <= tmp_4_fu_640_p3(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter7_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter7_reg)) or ((icmp_ln487_1_reg_2335_pp1_iter7_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter7_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then
                add_ln1192_1_reg_2502 <= grp_fu_2004_p3;
                add_ln1192_4_reg_2507 <= grp_fu_2021_p3;
                add_ln1192_7_reg_2512 <= grp_fu_2038_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln1192_reg_2276 <= add_ln1192_fu_866_p2;
                add_ln485_reg_2258 <= add_ln485_fu_844_p2;
                add_ln486_reg_2266 <= add_ln486_fu_850_p2;
                icmp_ln420_reg_2254 <= icmp_ln420_fu_838_p2;
                icmp_ln441_reg_2272 <= icmp_ln441_fu_856_p2;
                p_Result_1_reg_2293 <= p_Val2_9_fu_920_p3(41 downto 41);
                p_Result_s_reg_2282 <= ret_V_fu_871_p2(42 downto 42);
                p_Val2_9_reg_2287 <= p_Val2_9_fu_920_p3;
                trunc_ln728_reg_2298 <= trunc_ln728_fu_936_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                add_ln426_reg_2361 <= add_ln426_fu_1214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln484_reg_2197 <= add_ln484_fu_730_p2;
                    indexx_pre_V_reg_2227(41 downto 22) <= indexx_pre_V_fu_799_p3(41 downto 22);
                    indexy_pre_V_reg_2217(41 downto 22) <= indexy_pre_V_fu_774_p3(41 downto 22);
                loop_col_count_reg_2187 <= loop_col_count_fu_719_p3;
                loop_row_count_reg_2182 <= loop_row_count_fu_709_p3;
                p_Val2_12_reg_2192 <= p_Val2_12_fu_725_p2;
                    p_Val2_6_reg_2202(37 downto 0) <= p_Val2_6_fu_744_p1(37 downto 0);
                    rhs_V_reg_2207(37 downto 0) <= rhs_V_fu_748_p1(37 downto 0);
                    shl_ln728_3_reg_2212(53 downto 22) <= shl_ln728_3_fu_757_p3(53 downto 22);
                    shl_ln728_6_reg_2222(53 downto 22) <= shl_ln728_6_fu_782_p3(53 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (icmp_ln403_reg_2240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln406_reg_2317 <= and_ln406_fu_1053_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln406_reg_2317_pp1_iter1_reg <= and_ln406_reg_2317;
                and_ln485_reg_2327_pp1_iter1_reg <= and_ln485_reg_2327;
                and_ln487_reg_2331_pp1_iter1_reg <= and_ln487_reg_2331;
                icmp_ln387_reg_2303 <= icmp_ln387_fu_940_p2;
                icmp_ln387_reg_2303_pp1_iter1_reg <= icmp_ln387_reg_2303;
                icmp_ln487_1_reg_2335_pp1_iter1_reg <= icmp_ln487_1_reg_2335;
                icmp_ln879_2_reg_2321_pp1_iter1_reg <= icmp_ln879_2_reg_2321;
                j13_0_reg_445_pp1_iter1_reg <= j13_0_reg_445;
                trunc_ln728_1_reg_2312_pp1_iter1_reg <= trunc_ln728_1_reg_2312;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                and_ln406_reg_2317_pp1_iter2_reg <= and_ln406_reg_2317_pp1_iter1_reg;
                and_ln485_reg_2327_pp1_iter2_reg <= and_ln485_reg_2327_pp1_iter1_reg;
                and_ln485_reg_2327_pp1_iter3_reg <= and_ln485_reg_2327_pp1_iter2_reg;
                and_ln485_reg_2327_pp1_iter4_reg <= and_ln485_reg_2327_pp1_iter3_reg;
                and_ln485_reg_2327_pp1_iter5_reg <= and_ln485_reg_2327_pp1_iter4_reg;
                and_ln485_reg_2327_pp1_iter6_reg <= and_ln485_reg_2327_pp1_iter5_reg;
                and_ln485_reg_2327_pp1_iter7_reg <= and_ln485_reg_2327_pp1_iter6_reg;
                and_ln485_reg_2327_pp1_iter8_reg <= and_ln485_reg_2327_pp1_iter7_reg;
                and_ln485_reg_2327_pp1_iter9_reg <= and_ln485_reg_2327_pp1_iter8_reg;
                and_ln487_reg_2331_pp1_iter2_reg <= and_ln487_reg_2331_pp1_iter1_reg;
                and_ln487_reg_2331_pp1_iter3_reg <= and_ln487_reg_2331_pp1_iter2_reg;
                and_ln487_reg_2331_pp1_iter4_reg <= and_ln487_reg_2331_pp1_iter3_reg;
                and_ln487_reg_2331_pp1_iter5_reg <= and_ln487_reg_2331_pp1_iter4_reg;
                and_ln487_reg_2331_pp1_iter6_reg <= and_ln487_reg_2331_pp1_iter5_reg;
                and_ln487_reg_2331_pp1_iter7_reg <= and_ln487_reg_2331_pp1_iter6_reg;
                and_ln487_reg_2331_pp1_iter8_reg <= and_ln487_reg_2331_pp1_iter7_reg;
                and_ln487_reg_2331_pp1_iter9_reg <= and_ln487_reg_2331_pp1_iter8_reg;
                icmp_ln387_reg_2303_pp1_iter2_reg <= icmp_ln387_reg_2303_pp1_iter1_reg;
                icmp_ln387_reg_2303_pp1_iter3_reg <= icmp_ln387_reg_2303_pp1_iter2_reg;
                icmp_ln387_reg_2303_pp1_iter4_reg <= icmp_ln387_reg_2303_pp1_iter3_reg;
                icmp_ln387_reg_2303_pp1_iter5_reg <= icmp_ln387_reg_2303_pp1_iter4_reg;
                icmp_ln487_1_reg_2335_pp1_iter2_reg <= icmp_ln487_1_reg_2335_pp1_iter1_reg;
                icmp_ln487_1_reg_2335_pp1_iter3_reg <= icmp_ln487_1_reg_2335_pp1_iter2_reg;
                icmp_ln487_1_reg_2335_pp1_iter4_reg <= icmp_ln487_1_reg_2335_pp1_iter3_reg;
                icmp_ln487_1_reg_2335_pp1_iter5_reg <= icmp_ln487_1_reg_2335_pp1_iter4_reg;
                icmp_ln487_1_reg_2335_pp1_iter6_reg <= icmp_ln487_1_reg_2335_pp1_iter5_reg;
                icmp_ln487_1_reg_2335_pp1_iter7_reg <= icmp_ln487_1_reg_2335_pp1_iter6_reg;
                icmp_ln487_1_reg_2335_pp1_iter8_reg <= icmp_ln487_1_reg_2335_pp1_iter7_reg;
                icmp_ln487_1_reg_2335_pp1_iter9_reg <= icmp_ln487_1_reg_2335_pp1_iter8_reg;
                icmp_ln879_2_reg_2321_pp1_iter2_reg <= icmp_ln879_2_reg_2321_pp1_iter1_reg;
                icmp_ln879_2_reg_2321_pp1_iter3_reg <= icmp_ln879_2_reg_2321_pp1_iter2_reg;
                icmp_ln879_2_reg_2321_pp1_iter4_reg <= icmp_ln879_2_reg_2321_pp1_iter3_reg;
                icmp_ln879_2_reg_2321_pp1_iter5_reg <= icmp_ln879_2_reg_2321_pp1_iter4_reg;
                icmp_ln879_2_reg_2321_pp1_iter6_reg <= icmp_ln879_2_reg_2321_pp1_iter5_reg;
                j13_0_reg_445_pp1_iter2_reg <= j13_0_reg_445_pp1_iter1_reg;
                j13_0_reg_445_pp1_iter3_reg <= j13_0_reg_445_pp1_iter2_reg;
                p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg <= p_Result_i_i_i_i35_2_reg_2440;
                p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg <= p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg;
                p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg <= p_Result_i_i_i_i35_4_reg_2446;
                p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg <= p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg;
                trunc_ln647_reg_2434_pp1_iter7_reg <= trunc_ln647_reg_2434;
                trunc_ln647_reg_2434_pp1_iter8_reg <= trunc_ln647_reg_2434_pp1_iter7_reg;
                trunc_ln708_1_reg_2398_pp1_iter5_reg <= trunc_ln708_1_reg_2398;
                trunc_ln708_1_reg_2398_pp1_iter6_reg <= trunc_ln708_1_reg_2398_pp1_iter5_reg;
                trunc_ln708_1_reg_2398_pp1_iter7_reg <= trunc_ln708_1_reg_2398_pp1_iter6_reg;
                trunc_ln728_1_reg_2312_pp1_iter2_reg <= trunc_ln728_1_reg_2312_pp1_iter1_reg;
                trunc_ln728_1_reg_2312_pp1_iter3_reg <= trunc_ln728_1_reg_2312_pp1_iter2_reg;
                trunc_ln728_1_reg_2312_pp1_iter4_reg <= trunc_ln728_1_reg_2312_pp1_iter3_reg;
                trunc_ln728_1_reg_2312_pp1_iter5_reg <= trunc_ln728_1_reg_2312_pp1_iter4_reg;
                trunc_ln728_1_reg_2312_pp1_iter6_reg <= trunc_ln728_1_reg_2312_pp1_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln485_reg_2327 <= and_ln485_fu_1068_p2;
                icmp_ln879_2_reg_2321 <= icmp_ln879_2_fu_1063_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_fu_1068_p2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln487_reg_2331 <= and_ln487_fu_1078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496;
                j_1_reg_2307 <= j_1_fu_945_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496;
                ap_phi_reg_pp1_iter3_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter2_flag_write_2_reg_457;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507;
                ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i_reg_2235 <= i_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln331_reg_2129 <= icmp_ln331_fu_656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln380_fu_817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln403_reg_2240 <= icmp_ln403_fu_828_p2;
                icmp_ln484_reg_2249 <= icmp_ln484_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln485_fu_1068_p2) and (icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln487_1_reg_2335 <= grp_fu_557_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_fu_656_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                line_buffer_0_0_V_s_reg_2147 <= zext_ln342_fu_693_p1(12 - 1 downto 0);
                line_buffer_1_0_V_s_reg_2152 <= zext_ln342_fu_693_p1(12 - 1 downto 0);
                trunc_ln321_reg_2143 <= trunc_ln321_fu_689_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter6_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter6_reg)) or ((icmp_ln487_1_reg_2335_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter6_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then
                mul_ln1118_2_reg_2467 <= mul_ln1118_2_fu_1986_p2;
                mul_ln1118_5_reg_2482 <= mul_ln1118_5_fu_1992_p2;
                mul_ln1118_8_reg_2497 <= mul_ln1118_8_fu_1998_p2;
                sub_ln1354_2_reg_2462 <= sub_ln1354_2_fu_1405_p2;
                sub_ln1354_3_reg_2472 <= sub_ln1354_3_fu_1484_p2;
                sub_ln1354_5_reg_2477 <= sub_ln1354_5_fu_1496_p2;
                sub_ln1354_6_reg_2487 <= sub_ln1354_6_fu_1571_p2;
                sub_ln1354_8_reg_2492 <= sub_ln1354_8_fu_1583_p2;
                sub_ln1354_reg_2457 <= sub_ln1354_fu_1393_p2;
                trunc_ln708_2_reg_2452 <= mul_ln1118_fu_1979_p2(21 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter5_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter5_reg)) or ((icmp_ln487_1_reg_2335_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter5_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then
                p_Result_i_i_i_i35_2_reg_2440 <= select_ln488_1_fu_1270_p3(15 downto 8);
                p_Result_i_i_i_i35_4_reg_2446 <= select_ln488_1_fu_1270_p3(23 downto 16);
                trunc_ln647_reg_2434 <= trunc_ln647_fu_1277_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln406_reg_2317_pp1_iter2_reg) and (icmp_ln387_reg_2303_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln403_reg_2240 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                read_pixel_V_1_fu_170 <= imgInput_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_568 <= line_buffer_2_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_574 <= line_buffer_0_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_580 <= line_buffer_1_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                scalex_V_reg_2109 <= scalex_V_fu_632_p1;
                trunc_ln305_reg_2104 <= trunc_ln305_fu_627_p1;
                    ynew_reg_2099(63 downto 32) <= ynew_fu_618_p3(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_reg_2303_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln1495_reg_2339 <= select_ln1495_fu_1118_p3;
                tmp_7_reg_2349 <= select_ln1495_fu_1118_p3(38 downto 22);
                trunc_ln396_1_reg_2356 <= trunc_ln396_1_fu_1140_p1;
                trunc_ln851_4_reg_2344 <= trunc_ln851_4_fu_1126_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln331_fu_656_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln321_1_reg_2138 <= select_ln321_1_fu_681_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter8_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter8_reg)) or ((icmp_ln487_1_reg_2335_pp1_iter8_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter8_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then
                select_ln850_3_reg_2522 <= select_ln850_3_fu_1767_p3;
                select_ln850_4_reg_2527 <= select_ln850_4_fu_1837_p3;
                select_ln850_reg_2517 <= select_ln850_fu_1697_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                trunc_ln304_reg_2078 <= trunc_ln304_fu_613_p1;
                    xnew_reg_2073(63 downto 32) <= xnew_fu_604_p3(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter3_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter3_reg)) or ((icmp_ln487_1_reg_2335_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter3_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then
                trunc_ln708_1_reg_2398 <= sub_ln396_fu_1192_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                trunc_ln728_1_reg_2312 <= trunc_ln728_1_fu_1029_p1;
            end if;
        end if;
    end process;
    xnew_reg_2073(31 downto 0) <= "00000000000000000000000000000000";
    ynew_reg_2099(31 downto 0) <= "00000000000000000000000000000000";
    tmp_4_reg_2124(0) <= '0';
    p_Val2_6_reg_2202(41 downto 38) <= "0000";
    rhs_V_reg_2207(42 downto 38) <= "00000";
    shl_ln728_3_reg_2212(21 downto 0) <= "0000000000000000000000";
    indexy_pre_V_reg_2217(21 downto 0) <= "0000000000000000000000";
    shl_ln728_6_reg_2222(21 downto 0) <= "0000000000000000000000";
    indexx_pre_V_reg_2227(21 downto 0) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter10, ap_CS_fsm_state2, grp_xfUDivResize_fu_518_ap_done, ap_CS_fsm_state3, icmp_ln331_fu_656_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, icmp_ln380_fu_817_p2, icmp_ln387_fu_940_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_xfUDivResize_fu_518_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln331_fu_656_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln331_fu_656_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln380_fu_817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln387_fu_940_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln387_fu_940_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln1192_2_fu_1649_p2 <= std_logic_vector(signed(sext_ln703_1_fu_1642_p1) + signed(zext_ln1192_fu_1645_p1));
    add_ln1192_5_fu_1719_p2 <= std_logic_vector(signed(sext_ln703_3_fu_1712_p1) + signed(zext_ln1192_1_fu_1715_p1));
    add_ln1192_8_fu_1789_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1782_p1) + signed(zext_ln1192_2_fu_1785_p1));
    add_ln1192_fu_866_p0 <= grp_scaleCompute_fu_535_ap_return;
    add_ln1192_fu_866_p2 <= std_logic_vector(signed(add_ln1192_fu_866_p0) + signed(p_Val2_6_reg_2202));
    add_ln1353_1_fu_1379_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_1371_p1) + unsigned(zext_ln215_3_fu_1375_p1));
    add_ln1353_2_fu_1456_p2 <= std_logic_vector(unsigned(zext_ln215_6_fu_1449_p1) + unsigned(zext_ln215_7_fu_1452_p1));
    add_ln1353_3_fu_1470_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_1462_p1) + unsigned(zext_ln215_9_fu_1466_p1));
    add_ln1353_4_fu_1543_p2 <= std_logic_vector(unsigned(zext_ln215_12_fu_1536_p1) + unsigned(zext_ln215_13_fu_1539_p1));
    add_ln1353_5_fu_1557_p2 <= std_logic_vector(unsigned(zext_ln215_14_fu_1549_p1) + unsigned(zext_ln215_15_fu_1553_p1));
    add_ln1353_fu_1365_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1358_p1) + unsigned(zext_ln215_1_fu_1361_p1));
    add_ln331_fu_661_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_365) + unsigned(ap_const_lv33_1));
    add_ln346_fu_675_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_read_rows_count_0_phi_fu_380_p4));
    add_ln426_fu_1214_p2 <= std_logic_vector(unsigned(zext_ln426_fu_1201_p1) + unsigned(zext_ln426_1_fu_1210_p1));
    add_ln484_fu_730_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgOutput_rows_read));
    add_ln485_fu_844_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(read_rows_count_1_reg_398));
    add_ln486_fu_850_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(read_rows_count_1_reg_398));
    add_ln728_1_fu_793_p2 <= std_logic_vector(signed(ap_const_lv20_FFFFF) + signed(trunc_ln258_fu_790_p1));
    add_ln728_fu_768_p2 <= std_logic_vector(signed(ap_const_lv20_FFFFF) + signed(trunc_ln241_fu_765_p1));
    add_ln851_1_fu_1008_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_5_fu_999_p4));
    add_ln851_2_fu_1161_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_7_reg_2349));
    add_ln851_3_fu_1683_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln7_fu_1673_p4));
    add_ln851_4_fu_1753_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln851_1_fu_1743_p4));
    add_ln851_5_fu_1823_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln851_2_fu_1813_p4));
    add_ln851_fu_969_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_3_fu_960_p4));
    and_ln1494_fu_907_p2 <= (xor_ln1495_fu_901_p2 and icmp_ln1494_fu_896_p2);
    and_ln406_fu_1053_p2 <= (xor_ln406_fu_1042_p2 and icmp_ln406_1_fu_1048_p2);
    and_ln485_fu_1068_p2 <= (icmp_ln879_2_fu_1063_p2 and icmp_ln403_reg_2240);
    and_ln487_fu_1078_p2 <= (icmp_ln879_3_fu_1073_p2 and grp_fu_557_p2);
    and_ln507_fu_1868_p2 <= (icmp_ln879_fu_1863_p2 and icmp_ln403_reg_2240);
    and_ln891_fu_1944_p2 <= (xor_ln511_fu_1939_p2 and icmp_ln891_fu_1909_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(10);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln331_reg_2129)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln331_reg_2129 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln331_reg_2129)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln331_reg_2129 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter10, ap_predicate_op186_read_state14, ap_predicate_op398_write_state21)
    begin
                ap_block_pp1_stage0_01001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_predicate_op398_write_state21 = ap_const_boolean_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op186_read_state14 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter10, ap_predicate_op186_read_state14, ap_predicate_op398_write_state21)
    begin
                ap_block_pp1_stage0_11001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_predicate_op398_write_state21 = ap_const_boolean_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op186_read_state14 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp137_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter10, ap_predicate_op186_read_state14, ap_predicate_op398_write_state21)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp137 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_predicate_op398_write_state21 = ap_const_boolean_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op186_read_state14 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter10, ap_predicate_op186_read_state14, ap_predicate_op398_write_state21)
    begin
                ap_block_pp1_stage0_subdone <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_predicate_op398_write_state21 = ap_const_boolean_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op186_read_state14 = ap_const_boolean_1)));
    end process;

        ap_block_state11_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter0_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp1_stage0_iter3_assign_proc : process(imgInput_data_V_empty_n, ap_predicate_op186_read_state14)
    begin
                ap_block_state14_pp1_stage0_iter3 <= ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op186_read_state14 = ap_const_boolean_1));
    end process;


    ap_block_state14_pp1_stage0_iter3_ignore_call3_assign_proc : process(imgInput_data_V_empty_n, ap_predicate_op186_read_state14)
    begin
                ap_block_state14_pp1_stage0_iter3_ignore_call3 <= ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op186_read_state14 = ap_const_boolean_1));
    end process;

        ap_block_state15_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter4_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter5_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter6_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter7_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter8_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter9_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp1_stage0_iter10_assign_proc : process(imgOutput_data_V_full_n, ap_predicate_op398_write_state21)
    begin
                ap_block_state21_pp1_stage0_iter10 <= ((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op398_write_state21 = ap_const_boolean_1));
    end process;


    ap_block_state21_pp1_stage0_iter10_ignore_call3_assign_proc : process(imgOutput_data_V_full_n, ap_predicate_op398_write_state21)
    begin
                ap_block_state21_pp1_stage0_iter10_ignore_call3 <= ((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op398_write_state21 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(imgInput_data_V_empty_n, icmp_ln331_reg_2129)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((icmp_ln331_reg_2129 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_1867_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, icmp_ln387_reg_2303_pp1_iter4_reg)
    begin
                ap_condition_1867 <= ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_condition_1872_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg)
    begin
                ap_condition_1872 <= ((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0));
    end process;


    ap_condition_1879_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, icmp_ln387_reg_2303_pp1_iter4_reg, icmp_ln420_reg_2254)
    begin
                ap_condition_1879 <= ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_condition_198_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln387_reg_2303_pp1_iter5_reg)
    begin
                ap_condition_198 <= ((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0));
    end process;


    ap_condition_203_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln387_reg_2303_pp1_iter5_reg)
    begin
                ap_condition_203 <= ((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0));
    end process;


    ap_condition_360_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_360 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_446_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg)
    begin
                ap_condition_446 <= ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0));
    end process;


    ap_condition_453_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln387_reg_2303_pp1_iter3_reg)
    begin
                ap_condition_453 <= ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0));
    end process;


    ap_condition_723_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_723 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_743_assign_proc : process(icmp_ln403_reg_2240, icmp_ln387_fu_940_p2, and_ln406_fu_1053_p2)
    begin
                ap_condition_743 <= ((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (icmp_ln403_reg_2240 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln406_fu_1053_p2));
    end process;


    ap_condition_77_assign_proc : process(icmp_ln387_reg_2303_pp1_iter2_reg, icmp_ln403_reg_2240, and_ln406_reg_2317_pp1_iter2_reg)
    begin
                ap_condition_77 <= ((ap_const_lv1_1 = and_ln406_reg_2317_pp1_iter2_reg) and (icmp_ln387_reg_2303_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln403_reg_2240 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln331_fu_656_p2)
    begin
        if ((icmp_ln331_fu_656_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state11_assign_proc : process(icmp_ln387_fu_940_p2)
    begin
        if ((icmp_ln387_fu_940_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln380_fu_817_p2)
    begin
        if ((((icmp_ln380_fu_817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter9)
    begin
        if (((ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6_assign_proc : process(reg_568, icmp_ln420_reg_2254, icmp_ln441_reg_2272, reg_574, reg_580, icmp_ln387_reg_2303_pp1_iter5_reg, ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473)
    begin
        if ((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1)) then
            if (((icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 <= reg_574;
            elsif (((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 <= reg_568;
            elsif ((icmp_ln420_reg_2254 = ap_const_lv1_1)) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 <= reg_580;
            else 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 <= ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
            end if;
        else 
            ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 <= ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
        end if; 
    end process;


    ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6_assign_proc : process(reg_568, icmp_ln420_reg_2254, icmp_ln441_reg_2272, reg_574, reg_580, icmp_ln387_reg_2303_pp1_iter5_reg, ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485)
    begin
        if ((icmp_ln387_reg_2303_pp1_iter5_reg = ap_const_lv1_1)) then
            if (((icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 <= reg_568;
            elsif (((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 <= reg_580;
            elsif ((icmp_ln420_reg_2254 = ap_const_lv1_1)) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 <= reg_574;
            else 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 <= ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485;
            end if;
        else 
            ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 <= ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485;
        end if; 
    end process;

    ap_phi_mux_flag_write_2_phi_fu_462_p6 <= ap_phi_reg_pp1_iter4_flag_write_2_reg_457;

    ap_phi_mux_j13_0_phi_fu_449_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln387_reg_2303, j13_0_reg_445, ap_CS_fsm_pp1_stage0, j_1_reg_2307, ap_enable_reg_pp1_iter1)
    begin
        if (((icmp_ln387_reg_2303 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j13_0_phi_fu_449_p4 <= j_1_reg_2307;
        else 
            ap_phi_mux_j13_0_phi_fu_449_p4 <= j13_0_reg_445;
        end if; 
    end process;


    ap_phi_mux_read_rows_count_0_phi_fu_380_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln331_reg_2129, read_rows_count_0_reg_376, select_ln321_1_reg_2138)
    begin
        if (((icmp_ln331_reg_2129 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_read_rows_count_0_phi_fu_380_p4 <= select_ln321_1_reg_2138;
        else 
            ap_phi_mux_read_rows_count_0_phi_fu_380_p4 <= read_rows_count_0_reg_376;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_flag_write_2_reg_457 <= "X";
    ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op186_read_state14_assign_proc : process(icmp_ln387_reg_2303_pp1_iter2_reg, icmp_ln403_reg_2240, and_ln406_reg_2317_pp1_iter2_reg)
    begin
                ap_predicate_op186_read_state14 <= ((ap_const_lv1_1 = and_ln406_reg_2317_pp1_iter2_reg) and (icmp_ln387_reg_2303_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln403_reg_2240 = ap_const_lv1_0));
    end process;


    ap_predicate_op398_write_state21_assign_proc : process(icmp_ln484_reg_2249, and_ln485_reg_2327_pp1_iter9_reg, icmp_ln487_1_reg_2335_pp1_iter9_reg, and_ln487_reg_2331_pp1_iter9_reg)
    begin
                ap_predicate_op398_write_state21 <= (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter9_reg) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter9_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0)) or ((icmp_ln487_1_reg_2335_pp1_iter9_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter9_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, icmp_ln380_fu_817_p2)
    begin
        if (((icmp_ln380_fu_817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    first_row_index_1_fu_1971_p3 <= 
        indexstores_reg_422 when (or_ln891_fu_1958_p2(0) = '1') else 
        select_ln891_fu_1963_p3;
    first_row_index_fu_1914_p2 <= std_logic_vector(unsigned(indexstores_reg_422) + unsigned(ap_const_lv32_1));
    grp_fu_2004_p0 <= zext_ln1118_2_fu_1596_p1(12 - 1 downto 0);
    grp_fu_2012_p0 <= zext_ln1118_4_fu_1602_p1(12 - 1 downto 0);
    grp_fu_2021_p0 <= zext_ln1118_2_fu_1596_p1(12 - 1 downto 0);
    grp_fu_2029_p0 <= zext_ln1118_4_fu_1602_p1(12 - 1 downto 0);
    grp_fu_2038_p0 <= zext_ln1118_2_fu_1596_p1(12 - 1 downto 0);
    grp_fu_2046_p0 <= zext_ln1118_4_fu_1602_p1(12 - 1 downto 0);
    grp_fu_557_p2 <= "1" when (signed(ap_phi_mux_j13_0_phi_fu_449_p4) < signed(imgOutput_cols_read)) else "0";

    grp_scaleCompute_fu_535_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_block_pp1_stage0_11001_ignoreCallOp137)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp137) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            grp_scaleCompute_fu_535_ap_ce <= ap_const_logic_1;
        else 
            grp_scaleCompute_fu_535_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_scaleCompute_fu_535_currindex_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state7, icmp_ln380_fu_817_p2, icmp_ln387_fu_940_p2, ap_enable_reg_pp1_iter0, output_rows_count_0_reg_410, ap_phi_mux_j13_0_phi_fu_449_p4)
    begin
        if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_fu_535_currindex <= ap_phi_mux_j13_0_phi_fu_449_p4;
        elsif (((icmp_ln380_fu_817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_535_currindex <= output_rows_count_0_reg_410;
        else 
            grp_scaleCompute_fu_535_currindex <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scaleCompute_fu_535_inscale_V_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, scalex_V_reg_2109, scaley_V_reg_2119, ap_CS_fsm_state7, icmp_ln380_fu_817_p2, icmp_ln387_fu_940_p2, ap_enable_reg_pp1_iter0)
    begin
        if (((icmp_ln387_fu_940_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_scaleCompute_fu_535_inscale_V <= scalex_V_reg_2109;
        elsif (((icmp_ln380_fu_817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_535_inscale_V <= scaley_V_reg_2119;
        else 
            grp_scaleCompute_fu_535_inscale_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_xfUDivResize_fu_518_ap_start <= grp_xfUDivResize_fu_518_ap_start_reg;

    grp_xfUDivResize_fu_518_in_d_assign_proc : process(trunc_ln304_reg_2078, ap_CS_fsm_state2, trunc_ln305_reg_2104, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_518_in_d <= trunc_ln305_reg_2104;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_518_in_d <= trunc_ln304_reg_2078;
        else 
            grp_xfUDivResize_fu_518_in_d <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xfUDivResize_fu_518_in_n_assign_proc : process(xnew_reg_2073, ap_CS_fsm_state2, ynew_reg_2099, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_518_in_n <= ynew_reg_2099;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_518_in_n <= xnew_reg_2073;
        else 
            grp_xfUDivResize_fu_518_in_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_822_p2 <= std_logic_vector(unsigned(i12_0_reg_434) + unsigned(ap_const_lv32_1));
    icmp_ln1494_1_fu_1106_p2 <= "1" when (signed(zext_ln1494_1_fu_1102_p1) > signed(shl_ln728_6_reg_2222)) else "0";
    icmp_ln1494_fu_896_p2 <= "1" when (signed(zext_ln1494_fu_892_p1) > signed(shl_ln728_3_reg_2212)) else "0";
    icmp_ln331_fu_656_p2 <= "1" when (indvar_flatten_reg_365 = tmp_4_reg_2124) else "0";
    icmp_ln336_fu_651_p2 <= "1" when (signed(zext_ln336_fu_647_p1) < signed(imgInput_cols_read)) else "0";
    icmp_ln352_fu_705_p2 <= "1" when (signed(imgOutput_rows_read) > signed(imgInput_rows_read)) else "0";
    icmp_ln354_fu_715_p2 <= "1" when (signed(imgOutput_cols_read) > signed(imgInput_cols_read)) else "0";
    icmp_ln380_fu_817_p2 <= "1" when (signed(i12_0_reg_434) < signed(loop_row_count_reg_2182)) else "0";
    icmp_ln387_fu_940_p2 <= "1" when (signed(ap_phi_mux_j13_0_phi_fu_449_p4) < signed(loop_col_count_reg_2187)) else "0";
    icmp_ln403_fu_828_p2 <= "1" when (read_rows_count_1_reg_398 = imgInput_rows_read) else "0";
    icmp_ln406_1_fu_1048_p2 <= "1" when (signed(ap_phi_mux_j13_0_phi_fu_449_p4) < signed(imgInput_cols_read)) else "0";
    icmp_ln406_fu_1037_p2 <= "1" when (signed(zext_ln891_fu_1033_p1) < signed(add_ln485_reg_2258)) else "0";
    icmp_ln420_fu_838_p2 <= "1" when (indexstores_reg_422 = ap_const_lv32_0) else "0";
    icmp_ln426_fu_1205_p2 <= "0" when (zext_ln425_fu_1197_p1 = p_Val2_12_reg_2192) else "1";
    icmp_ln441_fu_856_p2 <= "1" when (indexstores_reg_422 = ap_const_lv32_1) else "0";
    icmp_ln484_fu_833_p2 <= "1" when (signed(output_rows_count_0_reg_410) > signed(add_ln484_reg_2197)) else "0";
    icmp_ln520_fu_1920_p2 <= "1" when (first_row_index_fu_1914_p2 = ap_const_lv32_3) else "0";
    icmp_ln851_1_fu_1737_p2 <= "1" when (trunc_ln851_6_fu_1733_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_1807_p2 <= "1" when (trunc_ln851_7_fu_1803_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_954_p2 <= "1" when (trunc_ln851_fu_951_p1 = ap_const_lv22_0) else "0";
    icmp_ln851_4_fu_993_p2 <= "1" when (trunc_ln851_3_fu_990_p1 = ap_const_lv22_0) else "0";
    icmp_ln851_5_fu_1156_p2 <= "1" when (trunc_ln851_4_reg_2344 = ap_const_lv22_0) else "0";
    icmp_ln851_fu_1667_p2 <= "1" when (trunc_ln851_5_fu_1663_p1 = ap_const_lv10_0) else "0";
    icmp_ln879_1_fu_1873_p2 <= "1" when (zext_ln879_fu_1859_p1 = add_ln486_reg_2266) else "0";
    icmp_ln879_2_fu_1063_p2 <= "1" when (zext_ln879_1_fu_1059_p1 = add_ln485_reg_2258) else "0";
    icmp_ln879_3_fu_1073_p2 <= "1" when (zext_ln879_1_fu_1059_p1 = add_ln486_reg_2266) else "0";
    icmp_ln879_fu_1863_p2 <= "1" when (zext_ln879_fu_1859_p1 = add_ln485_reg_2258) else "0";
    icmp_ln891_fu_1909_p2 <= "1" when (signed(zext_ln891_1_fu_1905_p1) < signed(add_ln485_reg_2258)) else "0";

    imgInput_data_V_blk_n_assign_proc : process(imgInput_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln331_reg_2129, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, icmp_ln387_reg_2303_pp1_iter2_reg, icmp_ln403_reg_2240, and_ln406_reg_2317_pp1_iter2_reg)
    begin
        if ((((ap_const_lv1_1 = and_ln406_reg_2317_pp1_iter2_reg) and (icmp_ln387_reg_2303_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln403_reg_2240 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((icmp_ln331_reg_2129 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_blk_n <= imgInput_data_V_empty_n;
        else 
            imgInput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgInput_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln331_reg_2129, ap_enable_reg_pp1_iter3, ap_predicate_op186_read_state14, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op186_read_state14 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln331_reg_2129 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_read <= ap_const_logic_1;
        else 
            imgInput_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    imgOutput_data_V_blk_n_assign_proc : process(imgOutput_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter10, icmp_ln484_reg_2249, and_ln485_reg_2327_pp1_iter9_reg, icmp_ln487_1_reg_2335_pp1_iter9_reg, and_ln487_reg_2331_pp1_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (((ap_const_lv1_1 = and_ln487_reg_2331_pp1_iter9_reg) and (ap_const_lv1_0 = and_ln485_reg_2327_pp1_iter9_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0)) or ((icmp_ln487_1_reg_2335_pp1_iter9_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln485_reg_2327_pp1_iter9_reg) and (icmp_ln484_reg_2249 = ap_const_lv1_0))))) then 
            imgOutput_data_V_blk_n <= imgOutput_data_V_full_n;
        else 
            imgOutput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgOutput_data_V_din <= ((select_ln850_4_reg_2527 & select_ln850_3_reg_2522) & select_ln850_reg_2517);

    imgOutput_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter10, ap_predicate_op398_write_state21, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_predicate_op398_write_state21 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            imgOutput_data_V_write <= ap_const_logic_1;
        else 
            imgOutput_data_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indexx_0_V_fu_1173_p3 <= 
        select_ln851_2_fu_1166_p3 when (tmp_12_fu_1149_p3(0) = '1') else 
        tmp_7_reg_2349;
    indexx_pre_V_fu_799_p3 <= (add_ln728_1_fu_793_p2 & ap_const_lv22_0);
    indexy_pre_V_fu_774_p3 <= (add_ln728_fu_768_p2 & ap_const_lv22_0);
    j_1_fu_945_p2 <= std_logic_vector(signed(ap_phi_mux_j13_0_phi_fu_449_p4) + signed(ap_const_lv32_1));
    j_fu_699_p2 <= std_logic_vector(unsigned(select_ln321_fu_667_p3) + unsigned(ap_const_lv31_1));
    lhs_V_fu_862_p0 <= grp_scaleCompute_fu_535_ap_return;
        lhs_V_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_862_p0),43));

    line_buffer_0_0_V_1_gep_fu_290_p3 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);

    line_buffer_0_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln420_reg_2254, icmp_ln441_reg_2272, line_buffer_0_0_V_s_reg_2147, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg, line_buffer_0_0_V_1_gep_fu_290_p3, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6, zext_ln428_fu_1220_p1, sext_ln459_fu_1235_p1)
    begin
        if (((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= line_buffer_0_0_V_1_gep_fu_290_p3;
        elsif (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= sext_ln459_fu_1235_p1(12 - 1 downto 0);
        elsif (((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_address0 <= line_buffer_0_0_V_s_reg_2147;
        else 
            line_buffer_0_0_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_address1_assign_proc : process(icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg, zext_ln471_fu_1255_p1, zext_ln429_fu_1265_p1, ap_condition_1867)
    begin
        if ((ap_const_boolean_1 = ap_condition_1867)) then
            if (((icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= zext_ln429_fu_1265_p1(12 - 1 downto 0);
            elsif (((icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= zext_ln471_fu_1255_p1(12 - 1 downto 0);
            else 
                line_buffer_0_0_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_0_0_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_block_pp0_stage0_11001, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter5, icmp_ln387_reg_2303_pp1_iter4_reg, icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg)
    begin
        if ((((icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6, read_pixel_V_1_fu_170)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_0_0_V_d0 <= read_pixel_V_1_fu_170;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_0_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_block_pp0_stage0_11001, trunc_ln321_reg_2143, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if ((((trunc_ln321_reg_2143 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_0_V_1_gep_fu_297_p3 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);

    line_buffer_1_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln420_reg_2254, icmp_ln441_reg_2272, line_buffer_1_0_V_s_reg_2152, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg, line_buffer_1_0_V_1_gep_fu_297_p3, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6, zext_ln428_fu_1220_p1, sext_ln480_fu_1230_p1)
    begin
        if (((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= line_buffer_1_0_V_1_gep_fu_297_p3;
        elsif (((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);
        elsif (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= sext_ln480_fu_1230_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_address0 <= line_buffer_1_0_V_s_reg_2152;
        else 
            line_buffer_1_0_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_address1_assign_proc : process(icmp_ln420_reg_2254, zext_ln450_fu_1260_p1, zext_ln429_fu_1265_p1, ap_condition_1867, ap_condition_1872)
    begin
        if ((ap_const_boolean_1 = ap_condition_1867)) then
            if ((icmp_ln420_reg_2254 = ap_const_lv1_1)) then 
                line_buffer_1_0_V_address1 <= zext_ln429_fu_1265_p1(12 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1872)) then 
                line_buffer_1_0_V_address1 <= zext_ln450_fu_1260_p1(12 - 1 downto 0);
            else 
                line_buffer_1_0_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_1_0_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_block_pp0_stage0_11001, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter5, icmp_ln387_reg_2303_pp1_iter4_reg, icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg)
    begin
        if ((((icmp_ln420_reg_2254 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6, read_pixel_V_1_fu_170)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            line_buffer_1_0_V_d0 <= read_pixel_V_1_fu_170;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_1_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, icmp_ln441_reg_2272, ap_block_pp0_stage0_11001, trunc_ln321_reg_2143, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if ((((trunc_ln321_reg_2143 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_2_0_V_1_gep_fu_276_p3 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);

    line_buffer_2_0_V_address0_assign_proc : process(ap_block_pp1_stage0, icmp_ln420_reg_2254, line_buffer_2_0_V_1_gep_fu_276_p3, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6, zext_ln428_fu_1220_p1, sext_ln438_fu_1240_p1, ap_condition_446, ap_condition_453)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then
            if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1))) then 
                line_buffer_2_0_V_address0 <= sext_ln438_fu_1240_p1(12 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_453)) then 
                line_buffer_2_0_V_address0 <= line_buffer_2_0_V_1_gep_fu_276_p3;
            elsif ((ap_const_boolean_1 = ap_condition_446)) then 
                line_buffer_2_0_V_address0 <= zext_ln428_fu_1220_p1(12 - 1 downto 0);
            else 
                line_buffer_2_0_V_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_address1_assign_proc : process(icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg, zext_ln471_fu_1255_p1, zext_ln450_fu_1260_p1, ap_condition_1879)
    begin
        if ((ap_const_boolean_1 = ap_condition_1879)) then
            if ((icmp_ln441_reg_2272 = ap_const_lv1_1)) then 
                line_buffer_2_0_V_address1 <= zext_ln450_fu_1260_p1(12 - 1 downto 0);
            elsif (((icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln441_reg_2272 = ap_const_lv1_0))) then 
                line_buffer_2_0_V_address1 <= zext_ln471_fu_1255_p1(12 - 1 downto 0);
            else 
                line_buffer_2_0_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln387_reg_2303_pp1_iter3_reg, icmp_ln879_2_reg_2321_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if ((((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter3_reg = ap_const_lv1_0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter5, icmp_ln387_reg_2303_pp1_iter4_reg, icmp_ln420_reg_2254, icmp_ln441_reg_2272, icmp_ln879_2_reg_2321_pp1_iter4_reg)
    begin
        if ((((icmp_ln441_reg_2272 = ap_const_lv1_1) and (icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln387_reg_2303_pp1_iter4_reg = ap_const_lv1_1) and (icmp_ln879_2_reg_2321_pp1_iter4_reg = ap_const_lv1_0) and (icmp_ln441_reg_2272 = ap_const_lv1_0) and (icmp_ln420_reg_2254 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln420_reg_2254, ap_enable_reg_pp1_iter4, ap_phi_mux_flag_write_2_phi_fu_462_p6)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_const_lv1_1) and (icmp_ln420_reg_2254 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            line_buffer_2_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    loop_col_count_fu_719_p3 <= 
        imgOutput_cols_read when (icmp_ln354_fu_715_p2(0) = '1') else 
        imgInput_cols_read;
    loop_row_count_fu_709_p3 <= 
        imgOutput_rows_read when (icmp_ln352_fu_705_p2(0) = '1') else 
        imgInput_rows_read;
    mul_ln1118_2_fu_1986_p0 <= zext_ln1118_3_fu_1415_p1(12 - 1 downto 0);
    mul_ln1118_5_fu_1992_p0 <= zext_ln1118_3_fu_1415_p1(12 - 1 downto 0);
    mul_ln1118_8_fu_1998_p0 <= zext_ln1118_3_fu_1415_p1(12 - 1 downto 0);
    mul_ln1118_fu_1979_p0 <= mul_ln1118_fu_1979_p00(12 - 1 downto 0);
    mul_ln1118_fu_1979_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_fu_1320_p4),22));
    mul_ln1118_fu_1979_p1 <= mul_ln1118_fu_1979_p10(12 - 1 downto 0);
    mul_ln1118_fu_1979_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln708_1_reg_2398_pp1_iter6_reg),22));
    nextYScale_V_fu_983_p3 <= 
        select_ln851_fu_975_p3 when (p_Result_s_reg_2282(0) = '1') else 
        tmp_3_fu_960_p4;
    or_ln508_fu_1878_p2 <= (icmp_ln879_1_fu_1873_p2 or and_ln507_fu_1868_p2);
    or_ln891_fu_1958_p2 <= (icmp_ln403_reg_2240 or and_ln891_fu_1944_p2);
    output_rows_count_fu_1884_p2 <= std_logic_vector(unsigned(output_rows_count_0_reg_410) + unsigned(ap_const_lv32_1));
    p_Result_i_i_i_i33_2_fu_1419_p4 <= P0Buf_0_V_3_reg_473(15 downto 8);
    p_Result_i_i_i_i33_3_fu_1439_p4 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507(15 downto 8);
    p_Result_i_i_i_i33_4_fu_1506_p4 <= P0Buf_0_V_3_reg_473(23 downto 16);
    p_Result_i_i_i_i33_5_fu_1526_p4 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507(23 downto 16);
    p_Result_i_i_i_i35_3_fu_1429_p4 <= select_ln488_fu_1313_p3(15 downto 8);
    p_Result_i_i_i_i35_5_fu_1516_p4 <= select_ln488_fu_1313_p3(23 downto 16);
    p_Val2_12_fu_725_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgInput_cols_read));
    p_Val2_6_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_735_p4),42));
    p_Val2_8_fu_752_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(imgInput_rows_read));
    p_Val2_9_fu_920_p3 <= 
        ap_const_lv42_0 when (tmp_9_fu_884_p3(0) = '1') else 
        select_ln1494_fu_913_p3;
    read_rows_count_2_fu_1932_p3 <= 
        read_rows_count_1_reg_398 when (icmp_ln403_reg_2240(0) = '1') else 
        read_rows_count_fu_1926_p2;
    read_rows_count_3_fu_1950_p3 <= 
        read_rows_count_1_reg_398 when (and_ln891_fu_1944_p2(0) = '1') else 
        read_rows_count_2_fu_1932_p3;
    read_rows_count_fu_1926_p2 <= std_logic_vector(unsigned(read_rows_count_1_reg_398) + unsigned(ap_const_lv32_1));
    ret_V_fu_871_p2 <= std_logic_vector(signed(lhs_V_fu_862_p1) + signed(rhs_V_reg_2207));
    rhs_V_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_735_p4),43));
    scalex_V_fu_632_p1 <= grp_xfUDivResize_fu_518_ap_return(48 - 1 downto 0);
    scaley_V_fu_636_p1 <= grp_xfUDivResize_fu_518_ap_return(48 - 1 downto 0);
    select_ln1494_fu_913_p2 <= grp_scaleCompute_fu_535_ap_return;
    select_ln1494_fu_913_p3 <= 
        indexy_pre_V_reg_2217 when (and_ln1494_fu_907_p2(0) = '1') else 
        select_ln1494_fu_913_p2;
    select_ln1495_fu_1118_p3 <= 
        ap_const_lv42_0 when (tmp_11_fu_1094_p3(0) = '1') else 
        select_ln257_fu_1111_p3;
    select_ln257_fu_1111_p3 <= 
        indexx_pre_V_reg_2227 when (icmp_ln1494_1_fu_1106_p2(0) = '1') else 
        grp_scaleCompute_fu_535_ap_return;
    select_ln321_1_fu_681_p3 <= 
        ap_phi_mux_read_rows_count_0_phi_fu_380_p4 when (icmp_ln336_fu_651_p2(0) = '1') else 
        add_ln346_fu_675_p2;
    select_ln321_fu_667_p3 <= 
        j_0_reg_387 when (icmp_ln336_fu_651_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln488_1_fu_1270_p3 <= 
        ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 when (icmp_ln879_2_reg_2321_pp1_iter5_reg(0) = '1') else 
        ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6;
    select_ln488_fu_1313_p3 <= 
        ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 when (icmp_ln879_2_reg_2321_pp1_iter6_reg(0) = '1') else 
        ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496;
    select_ln506_fu_1898_p3 <= 
        output_rows_count_0_reg_410 when (icmp_ln484_reg_2249(0) = '1') else 
        select_ln507_fu_1890_p3;
    select_ln507_fu_1890_p3 <= 
        output_rows_count_fu_1884_p2 when (or_ln508_fu_1878_p2(0) = '1') else 
        output_rows_count_0_reg_410;
    select_ln850_3_fu_1767_p3 <= 
        select_ln851_4_fu_1759_p3 when (tmp_14_fu_1725_p3(0) = '1') else 
        trunc_ln851_1_fu_1743_p4;
    select_ln850_4_fu_1837_p3 <= 
        select_ln851_5_fu_1829_p3 when (tmp_15_fu_1795_p3(0) = '1') else 
        trunc_ln851_2_fu_1813_p4;
    select_ln850_fu_1697_p3 <= 
        select_ln851_3_fu_1689_p3 when (tmp_13_fu_1655_p3(0) = '1') else 
        trunc_ln7_fu_1673_p4;
    select_ln851_1_fu_1014_p3 <= 
        tmp_5_fu_999_p4 when (icmp_ln851_4_fu_993_p2(0) = '1') else 
        add_ln851_1_fu_1008_p2;
    select_ln851_2_fu_1166_p3 <= 
        tmp_7_reg_2349 when (icmp_ln851_5_fu_1156_p2(0) = '1') else 
        add_ln851_2_fu_1161_p2;
    select_ln851_3_fu_1689_p3 <= 
        trunc_ln7_fu_1673_p4 when (icmp_ln851_fu_1667_p2(0) = '1') else 
        add_ln851_3_fu_1683_p2;
    select_ln851_4_fu_1759_p3 <= 
        trunc_ln851_1_fu_1743_p4 when (icmp_ln851_1_fu_1737_p2(0) = '1') else 
        add_ln851_4_fu_1753_p2;
    select_ln851_5_fu_1829_p3 <= 
        trunc_ln851_2_fu_1813_p4 when (icmp_ln851_2_fu_1807_p2(0) = '1') else 
        add_ln851_5_fu_1823_p2;
    select_ln851_fu_975_p3 <= 
        tmp_3_fu_960_p4 when (icmp_ln851_3_fu_954_p2(0) = '1') else 
        add_ln851_fu_969_p2;
    select_ln891_fu_1963_p3 <= 
        ap_const_lv32_0 when (icmp_ln520_fu_1920_p2(0) = '1') else 
        first_row_index_fu_1914_p2;
        sext_ln438_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j13_0_reg_445_pp1_iter3_reg),64));

        sext_ln459_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j13_0_reg_445_pp1_iter3_reg),64));

        sext_ln480_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j13_0_reg_445_pp1_iter3_reg),64));

        sext_ln703_1_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_1_reg_2502),24));

        sext_ln703_3_fu_1712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_4_reg_2507),24));

        sext_ln703_5_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_7_reg_2512),24));

    shl_ln1_fu_1635_p3 <= (trunc_ln647_reg_2434_pp1_iter8_reg & ap_const_lv10_0);
    shl_ln728_1_fu_1705_p3 <= (p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg & ap_const_lv10_0);
    shl_ln728_2_fu_1775_p3 <= (p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg & ap_const_lv10_0);
    shl_ln728_3_fu_757_p3 <= (p_Val2_8_fu_752_p2 & ap_const_lv22_0);
    shl_ln728_5_fu_1301_p3 <= (trunc_ln728_1_reg_2312_pp1_iter6_reg & ap_const_lv22_0);
    shl_ln728_6_fu_782_p3 <= (p_Val2_12_fu_725_p2 & ap_const_lv22_0);
    shl_ln_fu_1184_p3 <= (trunc_ln396_fu_1180_p1 & ap_const_lv22_0);
    sub_ln1354_1_fu_1399_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_1371_p1) - unsigned(zext_ln215_fu_1358_p1));
    sub_ln1354_2_fu_1405_p2 <= std_logic_vector(unsigned(zext_ln215_3_fu_1375_p1) - unsigned(zext_ln215_fu_1358_p1));
    sub_ln1354_3_fu_1484_p2 <= std_logic_vector(unsigned(zext_ln215_10_fu_1476_p1) - unsigned(zext_ln215_11_fu_1480_p1));
    sub_ln1354_4_fu_1490_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_1462_p1) - unsigned(zext_ln215_6_fu_1449_p1));
    sub_ln1354_5_fu_1496_p2 <= std_logic_vector(unsigned(zext_ln215_9_fu_1466_p1) - unsigned(zext_ln215_6_fu_1449_p1));
    sub_ln1354_6_fu_1571_p2 <= std_logic_vector(unsigned(zext_ln215_16_fu_1563_p1) - unsigned(zext_ln215_17_fu_1567_p1));
    sub_ln1354_7_fu_1577_p2 <= std_logic_vector(unsigned(zext_ln215_14_fu_1549_p1) - unsigned(zext_ln215_12_fu_1536_p1));
    sub_ln1354_8_fu_1583_p2 <= std_logic_vector(unsigned(zext_ln215_15_fu_1553_p1) - unsigned(zext_ln215_12_fu_1536_p1));
    sub_ln1354_fu_1393_p2 <= std_logic_vector(unsigned(zext_ln215_4_fu_1385_p1) - unsigned(zext_ln215_5_fu_1389_p1));
    sub_ln396_fu_1192_p2 <= std_logic_vector(unsigned(trunc_ln396_1_reg_2356) - unsigned(shl_ln_fu_1184_p3));
    sub_ln728_fu_1308_p2 <= std_logic_vector(unsigned(trunc_ln728_reg_2298) - unsigned(shl_ln728_5_fu_1301_p3));
    tmp_11_fu_1094_p3 <= grp_scaleCompute_fu_535_ap_return(41 downto 41);
    tmp_12_fu_1149_p3 <= select_ln1495_reg_2339(41 downto 41);
    tmp_13_fu_1655_p3 <= add_ln1192_2_fu_1649_p2(23 downto 23);
    tmp_14_fu_1725_p3 <= add_ln1192_5_fu_1719_p2(23 downto 23);
    tmp_15_fu_1795_p3 <= add_ln1192_8_fu_1789_p2(23 downto 23);
    tmp_3_fu_960_p4 <= add_ln1192_reg_2276(38 downto 22);
    tmp_4_fu_640_p3 <= (imgInput_cols_read & ap_const_lv1_0);
    tmp_5_fu_999_p4 <= p_Val2_9_reg_2287(38 downto 22);
    tmp_6_fu_735_p4 <= Yscale64_reg_2114(47 downto 10);
    tmp_9_fu_884_p1 <= grp_scaleCompute_fu_535_ap_return;
    tmp_9_fu_884_p3 <= tmp_9_fu_884_p1(41 downto 41);
    tmp_V_fu_1022_p3 <= 
        select_ln851_1_fu_1014_p3 when (p_Result_1_reg_2293(0) = '1') else 
        tmp_5_fu_999_p4;
    trunc_ln241_fu_765_p1 <= imgInput_rows_read(20 - 1 downto 0);
    trunc_ln258_fu_790_p1 <= imgInput_cols_read(20 - 1 downto 0);
    trunc_ln304_fu_613_p1 <= imgOutput_cols_read(16 - 1 downto 0);
    trunc_ln305_fu_627_p1 <= imgOutput_rows_read(16 - 1 downto 0);
    trunc_ln321_fu_689_p1 <= select_ln321_1_fu_681_p3(1 - 1 downto 0);
    trunc_ln396_1_fu_1140_p1 <= select_ln1495_fu_1118_p3(24 - 1 downto 0);
    trunc_ln396_fu_1180_p1 <= indexx_0_V_fu_1173_p3(2 - 1 downto 0);
    trunc_ln647_1_fu_1330_p1 <= P0Buf_0_V_3_reg_473(8 - 1 downto 0);
    trunc_ln647_2_fu_1334_p1 <= select_ln488_fu_1313_p3(8 - 1 downto 0);
    trunc_ln647_3_fu_1338_p1 <= ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507(8 - 1 downto 0);
    trunc_ln647_fu_1277_p1 <= select_ln488_1_fu_1270_p3(8 - 1 downto 0);
    trunc_ln6_fu_1320_p4 <= sub_ln728_fu_1308_p2(23 downto 12);
    trunc_ln728_1_fu_1029_p1 <= tmp_V_fu_1022_p3(2 - 1 downto 0);
    trunc_ln728_fu_936_p1 <= p_Val2_9_fu_920_p3(24 - 1 downto 0);
    trunc_ln7_fu_1673_p4 <= add_ln1192_2_fu_1649_p2(17 downto 10);
    trunc_ln851_1_fu_1743_p4 <= add_ln1192_5_fu_1719_p2(17 downto 10);
    trunc_ln851_2_fu_1813_p4 <= add_ln1192_8_fu_1789_p2(17 downto 10);
    trunc_ln851_3_fu_990_p1 <= p_Val2_9_reg_2287(22 - 1 downto 0);
    trunc_ln851_4_fu_1126_p1 <= select_ln1495_fu_1118_p3(22 - 1 downto 0);
    trunc_ln851_5_fu_1663_p1 <= add_ln1192_2_fu_1649_p2(10 - 1 downto 0);
    trunc_ln851_6_fu_1733_p1 <= add_ln1192_5_fu_1719_p2(10 - 1 downto 0);
    trunc_ln851_7_fu_1803_p1 <= add_ln1192_8_fu_1789_p2(10 - 1 downto 0);
    trunc_ln851_fu_951_p1 <= add_ln1192_reg_2276(22 - 1 downto 0);
    xnew_fu_604_p3 <= (imgInput_cols_read & ap_const_lv32_0);
    xor_ln1495_fu_901_p2 <= (tmp_9_fu_884_p3 xor ap_const_lv1_1);
    xor_ln406_fu_1042_p2 <= (icmp_ln406_fu_1037_p2 xor ap_const_lv1_1);
    xor_ln511_fu_1939_p2 <= (icmp_ln403_reg_2240 xor ap_const_lv1_1);
    ynew_fu_618_p3 <= (imgInput_rows_read & ap_const_lv32_0);
    zext_ln1118_2_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln708_2_reg_2452),22));
    zext_ln1118_3_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_fu_1320_p4),21));
    zext_ln1118_4_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln708_1_reg_2398_pp1_iter7_reg),21));
    zext_ln1192_1_fu_1715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_1_fu_1705_p3),24));
    zext_ln1192_2_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_2_fu_1775_p3),24));
    zext_ln1192_fu_1645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1635_p3),24));
    zext_ln1494_1_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_scaleCompute_fu_535_ap_return),54));
    zext_ln1494_fu_892_p0 <= grp_scaleCompute_fu_535_ap_return;
    zext_ln1494_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1494_fu_892_p0),54));
    zext_ln215_10_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_2_fu_1456_p2),10));
    zext_ln215_11_fu_1480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_3_fu_1470_p2),10));
    zext_ln215_12_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i35_4_reg_2446),9));
    zext_ln215_13_fu_1539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i33_5_fu_1526_p4),9));
    zext_ln215_14_fu_1549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i33_4_fu_1506_p4),9));
    zext_ln215_15_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i35_5_fu_1516_p4),9));
    zext_ln215_16_fu_1563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_4_fu_1543_p2),10));
    zext_ln215_17_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_5_fu_1557_p2),10));
    zext_ln215_1_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_3_fu_1338_p1),9));
    zext_ln215_2_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_1_fu_1330_p1),9));
    zext_ln215_3_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_2_fu_1334_p1),9));
    zext_ln215_4_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_fu_1365_p2),10));
    zext_ln215_5_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_1_fu_1379_p2),10));
    zext_ln215_6_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i35_2_reg_2440),9));
    zext_ln215_7_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i33_3_fu_1439_p4),9));
    zext_ln215_8_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i33_2_fu_1419_p4),9));
    zext_ln215_9_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i35_3_fu_1429_p4),9));
    zext_ln215_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_reg_2434),9));
    zext_ln336_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_387),32));
    zext_ln342_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln321_fu_667_p3),64));
    zext_ln425_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexx_0_V_fu_1173_p3),32));
    zext_ln426_1_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln426_fu_1205_p2),18));
    zext_ln426_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexx_0_V_fu_1173_p3),18));
    zext_ln428_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexx_0_V_fu_1173_p3),64));
    zext_ln429_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln426_reg_2361),64));
    zext_ln450_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln426_reg_2361),64));
    zext_ln471_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln426_reg_2361),64));
    zext_ln879_1_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_1022_p3),32));
    zext_ln879_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_V_fu_174),32));
    zext_ln891_1_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_1_fu_178),32));
    zext_ln891_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_fu_983_p3),32));
end behav;
