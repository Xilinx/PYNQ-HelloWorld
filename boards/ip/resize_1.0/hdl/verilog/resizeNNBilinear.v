// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resizeNNBilinear (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_rows_read,
        imgInput_cols_read,
        imgInput_data_V_dout,
        imgInput_data_V_empty_n,
        imgInput_data_V_read,
        imgOutput_rows_read,
        imgOutput_cols_read,
        imgOutput_data_V_din,
        imgOutput_data_V_full_n,
        imgOutput_data_V_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_pp0_stage0 = 11'd8;
parameter    ap_ST_fsm_state6 = 11'd16;
parameter    ap_ST_fsm_state7 = 11'd32;
parameter    ap_ST_fsm_state8 = 11'd64;
parameter    ap_ST_fsm_state9 = 11'd128;
parameter    ap_ST_fsm_state10 = 11'd256;
parameter    ap_ST_fsm_pp1_stage0 = 11'd512;
parameter    ap_ST_fsm_state22 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] imgInput_rows_read;
input  [31:0] imgInput_cols_read;
input  [23:0] imgInput_data_V_dout;
input   imgInput_data_V_empty_n;
output   imgInput_data_V_read;
input  [31:0] imgOutput_rows_read;
input  [31:0] imgOutput_cols_read;
output  [23:0] imgOutput_data_V_din;
input   imgOutput_data_V_full_n;
output   imgOutput_data_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg imgInput_data_V_read;
reg imgOutput_data_V_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    imgInput_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln331_reg_2129;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln387_reg_2303;
reg   [0:0] icmp_ln387_reg_2303_pp1_iter2_reg;
reg   [0:0] icmp_ln403_reg_2240;
reg   [0:0] and_ln406_reg_2317;
reg   [0:0] and_ln406_reg_2317_pp1_iter2_reg;
reg    imgOutput_data_V_blk_n;
reg    ap_enable_reg_pp1_iter10;
reg   [0:0] icmp_ln484_reg_2249;
reg   [0:0] and_ln485_reg_2327;
reg   [0:0] and_ln485_reg_2327_pp1_iter9_reg;
reg   [0:0] icmp_ln487_1_reg_2335;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter9_reg;
reg   [0:0] and_ln487_reg_2331;
reg   [0:0] and_ln487_reg_2331_pp1_iter9_reg;
reg   [32:0] indvar_flatten_reg_365;
reg   [1:0] read_rows_count_0_reg_376;
reg   [30:0] j_0_reg_387;
reg  signed [31:0] j13_0_reg_445;
reg  signed [31:0] j13_0_reg_445_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
reg    ap_predicate_op186_read_state14;
reg    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
wire    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_state17_pp1_stage0_iter6;
wire    ap_block_state18_pp1_stage0_iter7;
wire    ap_block_state19_pp1_stage0_iter8;
wire    ap_block_state20_pp1_stage0_iter9;
reg    ap_predicate_op398_write_state21;
reg    ap_block_state21_pp1_stage0_iter10;
reg    ap_block_pp1_stage0_11001;
reg  signed [31:0] j13_0_reg_445_pp1_iter2_reg;
reg  signed [31:0] j13_0_reg_445_pp1_iter3_reg;
reg   [23:0] P0Buf_0_V_3_reg_473;
wire   [23:0] line_buffer_2_0_V_q0;
reg   [23:0] reg_568;
reg    ap_enable_reg_pp1_iter5;
reg   [0:0] icmp_ln387_reg_2303_pp1_iter4_reg;
reg   [0:0] icmp_ln420_reg_2254;
reg   [0:0] icmp_ln441_reg_2272;
reg   [0:0] icmp_ln879_2_reg_2321;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter4_reg;
wire   [23:0] line_buffer_0_0_V_q0;
reg   [23:0] reg_574;
wire   [23:0] line_buffer_1_0_V_q0;
reg   [23:0] reg_580;
wire   [23:0] line_buffer_2_0_V_q1;
reg    ap_enable_reg_pp1_iter6;
reg   [0:0] icmp_ln387_reg_2303_pp1_iter5_reg;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter5_reg;
wire   [23:0] line_buffer_0_0_V_q1;
wire   [23:0] line_buffer_1_0_V_q1;
wire   [63:0] xnew_fu_604_p3;
reg   [63:0] xnew_reg_2073;
wire   [15:0] trunc_ln304_fu_613_p1;
reg   [15:0] trunc_ln304_reg_2078;
wire    ap_CS_fsm_state2;
wire    grp_xfUDivResize_fu_518_ap_ready;
wire    grp_xfUDivResize_fu_518_ap_done;
wire   [63:0] ynew_fu_618_p3;
reg   [63:0] ynew_reg_2099;
wire   [15:0] trunc_ln305_fu_627_p1;
reg   [15:0] trunc_ln305_reg_2104;
wire   [47:0] scalex_V_fu_632_p1;
reg   [47:0] scalex_V_reg_2109;
wire   [63:0] grp_xfUDivResize_fu_518_ap_return;
reg   [63:0] Yscale64_reg_2114;
wire    ap_CS_fsm_state3;
wire   [47:0] scaley_V_fu_636_p1;
reg   [47:0] scaley_V_reg_2119;
wire   [32:0] tmp_4_fu_640_p3;
reg   [32:0] tmp_4_reg_2124;
wire   [0:0] icmp_ln331_fu_656_p2;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [32:0] add_ln331_fu_661_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] select_ln321_1_fu_681_p3;
reg   [1:0] select_ln321_1_reg_2138;
wire   [0:0] trunc_ln321_fu_689_p1;
reg   [0:0] trunc_ln321_reg_2143;
reg   [11:0] line_buffer_0_0_V_s_reg_2147;
reg   [11:0] line_buffer_1_0_V_s_reg_2152;
wire   [30:0] j_fu_699_p2;
wire   [31:0] loop_row_count_fu_709_p3;
reg   [31:0] loop_row_count_reg_2182;
wire    ap_CS_fsm_state6;
wire   [31:0] loop_col_count_fu_719_p3;
reg   [31:0] loop_col_count_reg_2187;
wire   [31:0] p_Val2_12_fu_725_p2;
reg   [31:0] p_Val2_12_reg_2192;
wire   [31:0] add_ln484_fu_730_p2;
reg   [31:0] add_ln484_reg_2197;
wire   [41:0] p_Val2_6_fu_744_p1;
reg   [41:0] p_Val2_6_reg_2202;
wire   [42:0] rhs_V_fu_748_p1;
reg   [42:0] rhs_V_reg_2207;
wire   [53:0] shl_ln728_3_fu_757_p3;
reg   [53:0] shl_ln728_3_reg_2212;
wire   [41:0] indexy_pre_V_fu_774_p3;
reg   [41:0] indexy_pre_V_reg_2217;
wire   [53:0] shl_ln728_6_fu_782_p3;
reg   [53:0] shl_ln728_6_reg_2222;
wire   [41:0] indexx_pre_V_fu_799_p3;
reg   [41:0] indexx_pre_V_reg_2227;
wire   [31:0] i_fu_822_p2;
reg   [31:0] i_reg_2235;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln403_fu_828_p2;
wire   [0:0] icmp_ln380_fu_817_p2;
wire   [0:0] icmp_ln484_fu_833_p2;
wire   [0:0] icmp_ln420_fu_838_p2;
wire    ap_CS_fsm_state10;
wire   [31:0] add_ln485_fu_844_p2;
reg   [31:0] add_ln485_reg_2258;
wire   [31:0] add_ln486_fu_850_p2;
reg   [31:0] add_ln486_reg_2266;
wire   [0:0] icmp_ln441_fu_856_p2;
wire   [41:0] add_ln1192_fu_866_p2;
reg   [41:0] add_ln1192_reg_2276;
reg   [0:0] p_Result_s_reg_2282;
wire   [41:0] p_Val2_9_fu_920_p3;
reg   [41:0] p_Val2_9_reg_2287;
reg   [0:0] p_Result_1_reg_2293;
wire   [23:0] trunc_ln728_fu_936_p1;
reg   [23:0] trunc_ln728_reg_2298;
wire   [0:0] icmp_ln387_fu_940_p2;
reg   [0:0] icmp_ln387_reg_2303_pp1_iter1_reg;
reg   [0:0] icmp_ln387_reg_2303_pp1_iter3_reg;
wire   [31:0] j_1_fu_945_p2;
reg   [31:0] j_1_reg_2307;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln728_1_fu_1029_p1;
reg   [1:0] trunc_ln728_1_reg_2312;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter1_reg;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter2_reg;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter3_reg;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter4_reg;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter5_reg;
reg   [1:0] trunc_ln728_1_reg_2312_pp1_iter6_reg;
wire   [0:0] and_ln406_fu_1053_p2;
reg   [0:0] and_ln406_reg_2317_pp1_iter1_reg;
wire   [0:0] icmp_ln879_2_fu_1063_p2;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter1_reg;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter2_reg;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter3_reg;
reg   [0:0] icmp_ln879_2_reg_2321_pp1_iter6_reg;
wire   [0:0] and_ln485_fu_1068_p2;
reg   [0:0] and_ln485_reg_2327_pp1_iter1_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter2_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter3_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter4_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter5_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter6_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter7_reg;
reg   [0:0] and_ln485_reg_2327_pp1_iter8_reg;
wire   [0:0] and_ln487_fu_1078_p2;
reg   [0:0] and_ln487_reg_2331_pp1_iter1_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter2_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter3_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter4_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter5_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter6_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter7_reg;
reg   [0:0] and_ln487_reg_2331_pp1_iter8_reg;
wire   [0:0] grp_fu_557_p2;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter1_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter2_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter3_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter4_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter5_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter6_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter7_reg;
reg   [0:0] icmp_ln487_1_reg_2335_pp1_iter8_reg;
wire   [41:0] select_ln1495_fu_1118_p3;
reg   [41:0] select_ln1495_reg_2339;
wire   [21:0] trunc_ln851_4_fu_1126_p1;
reg   [21:0] trunc_ln851_4_reg_2344;
reg   [16:0] tmp_7_reg_2349;
wire   [23:0] trunc_ln396_1_fu_1140_p1;
reg   [23:0] trunc_ln396_1_reg_2356;
wire   [17:0] add_ln426_fu_1214_p2;
reg   [17:0] add_ln426_reg_2361;
wire   [11:0] line_buffer_2_0_V_1_gep_fu_276_p3;
wire   [11:0] line_buffer_0_0_V_1_gep_fu_290_p3;
wire   [11:0] line_buffer_1_0_V_1_gep_fu_297_p3;
reg   [11:0] trunc_ln708_1_reg_2398;
reg   [11:0] trunc_ln708_1_reg_2398_pp1_iter5_reg;
reg   [11:0] trunc_ln708_1_reg_2398_pp1_iter6_reg;
reg   [11:0] trunc_ln708_1_reg_2398_pp1_iter7_reg;
wire   [7:0] trunc_ln647_fu_1277_p1;
reg   [7:0] trunc_ln647_reg_2434;
reg   [7:0] trunc_ln647_reg_2434_pp1_iter7_reg;
reg   [7:0] trunc_ln647_reg_2434_pp1_iter8_reg;
reg   [7:0] p_Result_i_i_i_i35_2_reg_2440;
reg   [7:0] p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg;
reg   [7:0] p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg;
reg   [7:0] p_Result_i_i_i_i35_4_reg_2446;
reg   [7:0] p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg;
reg   [7:0] p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg;
reg   [11:0] trunc_ln708_2_reg_2452;
wire   [9:0] sub_ln1354_fu_1393_p2;
reg  signed [9:0] sub_ln1354_reg_2457;
wire   [8:0] sub_ln1354_2_fu_1405_p2;
reg  signed [8:0] sub_ln1354_2_reg_2462;
wire  signed [20:0] mul_ln1118_2_fu_1986_p2;
reg  signed [20:0] mul_ln1118_2_reg_2467;
wire   [9:0] sub_ln1354_3_fu_1484_p2;
reg  signed [9:0] sub_ln1354_3_reg_2472;
wire   [8:0] sub_ln1354_5_fu_1496_p2;
reg  signed [8:0] sub_ln1354_5_reg_2477;
wire  signed [20:0] mul_ln1118_5_fu_1992_p2;
reg  signed [20:0] mul_ln1118_5_reg_2482;
wire   [9:0] sub_ln1354_6_fu_1571_p2;
reg  signed [9:0] sub_ln1354_6_reg_2487;
wire   [8:0] sub_ln1354_8_fu_1583_p2;
reg  signed [8:0] sub_ln1354_8_reg_2492;
wire  signed [20:0] mul_ln1118_8_fu_1998_p2;
reg  signed [20:0] mul_ln1118_8_reg_2497;
wire  signed [22:0] grp_fu_2004_p3;
reg  signed [22:0] add_ln1192_1_reg_2502;
reg    ap_enable_reg_pp1_iter8;
wire  signed [22:0] grp_fu_2021_p3;
reg  signed [22:0] add_ln1192_4_reg_2507;
wire  signed [22:0] grp_fu_2038_p3;
reg  signed [22:0] add_ln1192_7_reg_2512;
wire   [7:0] select_ln850_fu_1697_p3;
reg   [7:0] select_ln850_reg_2517;
wire   [7:0] select_ln850_3_fu_1767_p3;
reg   [7:0] select_ln850_3_reg_2522;
wire   [7:0] select_ln850_4_fu_1837_p3;
reg   [7:0] select_ln850_4_reg_2527;
wire   [31:0] select_ln506_fu_1898_p3;
wire    ap_CS_fsm_state22;
wire   [31:0] read_rows_count_3_fu_1950_p3;
wire   [31:0] first_row_index_1_fu_1971_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter9;
reg   [11:0] line_buffer_0_0_V_address0;
reg    line_buffer_0_0_V_ce0;
reg    line_buffer_0_0_V_we0;
reg   [23:0] line_buffer_0_0_V_d0;
reg   [11:0] line_buffer_0_0_V_address1;
reg    line_buffer_0_0_V_ce1;
reg   [11:0] line_buffer_1_0_V_address0;
reg    line_buffer_1_0_V_ce0;
reg    line_buffer_1_0_V_we0;
reg   [23:0] line_buffer_1_0_V_d0;
reg   [11:0] line_buffer_1_0_V_address1;
reg    line_buffer_1_0_V_ce1;
reg   [11:0] line_buffer_2_0_V_address0;
reg    line_buffer_2_0_V_ce0;
reg    line_buffer_2_0_V_we0;
reg   [11:0] line_buffer_2_0_V_address1;
reg    line_buffer_2_0_V_ce1;
wire    grp_xfUDivResize_fu_518_ap_start;
wire    grp_xfUDivResize_fu_518_ap_idle;
reg   [63:0] grp_xfUDivResize_fu_518_in_n;
reg   [15:0] grp_xfUDivResize_fu_518_in_d;
reg   [31:0] grp_scaleCompute_fu_535_currindex;
reg   [47:0] grp_scaleCompute_fu_535_inscale_V;
wire   [41:0] grp_scaleCompute_fu_535_ap_return;
reg    grp_scaleCompute_fu_535_ap_ce;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_block_state11_pp1_stage0_iter0_ignore_call3;
wire    ap_block_state12_pp1_stage0_iter1_ignore_call3;
wire    ap_block_state13_pp1_stage0_iter2_ignore_call3;
reg    ap_block_state14_pp1_stage0_iter3_ignore_call3;
wire    ap_block_state15_pp1_stage0_iter4_ignore_call3;
wire    ap_block_state16_pp1_stage0_iter5_ignore_call3;
wire    ap_block_state17_pp1_stage0_iter6_ignore_call3;
wire    ap_block_state18_pp1_stage0_iter7_ignore_call3;
wire    ap_block_state19_pp1_stage0_iter8_ignore_call3;
wire    ap_block_state20_pp1_stage0_iter9_ignore_call3;
reg    ap_block_state21_pp1_stage0_iter10_ignore_call3;
reg    ap_block_pp1_stage0_11001_ignoreCallOp137;
reg   [1:0] ap_phi_mux_read_rows_count_0_phi_fu_380_p4;
reg   [31:0] read_rows_count_1_reg_398;
reg   [31:0] output_rows_count_0_reg_410;
reg   [31:0] indexstores_reg_422;
reg   [31:0] i12_0_reg_434;
reg  signed [31:0] ap_phi_mux_j13_0_phi_fu_449_p4;
wire   [0:0] ap_phi_mux_flag_write_2_phi_fu_462_p6;
wire   [0:0] ap_phi_reg_pp1_iter0_flag_write_2_reg_457;
reg   [0:0] ap_phi_reg_pp1_iter1_flag_write_2_reg_457;
reg   [0:0] ap_phi_reg_pp1_iter2_flag_write_2_reg_457;
reg   [0:0] ap_phi_reg_pp1_iter3_flag_write_2_reg_457;
reg   [0:0] ap_phi_reg_pp1_iter4_flag_write_2_reg_457;
reg   [23:0] ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6;
wire   [23:0] ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
reg   [23:0] ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6;
wire   [23:0] ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485;
wire   [23:0] ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496;
reg   [23:0] ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496;
wire   [23:0] ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507;
reg   [23:0] ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507;
reg    grp_xfUDivResize_fu_518_ap_start_reg;
wire   [63:0] zext_ln342_fu_693_p1;
wire   [63:0] zext_ln428_fu_1220_p1;
wire  signed [63:0] sext_ln480_fu_1230_p1;
wire  signed [63:0] sext_ln459_fu_1235_p1;
wire  signed [63:0] sext_ln438_fu_1240_p1;
wire   [63:0] zext_ln471_fu_1255_p1;
wire   [63:0] zext_ln450_fu_1260_p1;
wire   [63:0] zext_ln429_fu_1265_p1;
reg   [23:0] read_pixel_V_1_fu_170;
reg   [16:0] indexy_V_fu_174;
wire   [16:0] tmp_V_fu_1022_p3;
reg   [16:0] nextYScale_V_1_fu_178;
wire   [16:0] nextYScale_V_fu_983_p3;
reg    ap_block_pp1_stage0_01001;
wire   [31:0] zext_ln336_fu_647_p1;
wire   [0:0] icmp_ln336_fu_651_p2;
wire   [1:0] add_ln346_fu_675_p2;
wire   [30:0] select_ln321_fu_667_p3;
wire   [0:0] icmp_ln352_fu_705_p2;
wire   [0:0] icmp_ln354_fu_715_p2;
wire   [37:0] tmp_6_fu_735_p4;
wire   [31:0] p_Val2_8_fu_752_p2;
wire   [19:0] trunc_ln241_fu_765_p1;
wire   [19:0] add_ln728_fu_768_p2;
wire   [19:0] trunc_ln258_fu_790_p1;
wire   [19:0] add_ln728_1_fu_793_p2;
wire  signed [41:0] lhs_V_fu_862_p0;
wire  signed [41:0] add_ln1192_fu_866_p0;
wire  signed [42:0] lhs_V_fu_862_p1;
wire   [42:0] ret_V_fu_871_p2;
wire  signed [41:0] tmp_9_fu_884_p1;
wire  signed [41:0] zext_ln1494_fu_892_p0;
wire   [53:0] zext_ln1494_fu_892_p1;
wire   [0:0] tmp_9_fu_884_p3;
wire   [0:0] icmp_ln1494_fu_896_p2;
wire   [0:0] xor_ln1495_fu_901_p2;
wire   [0:0] and_ln1494_fu_907_p2;
wire  signed [41:0] select_ln1494_fu_913_p2;
wire   [41:0] select_ln1494_fu_913_p3;
wire   [21:0] trunc_ln851_fu_951_p1;
wire   [16:0] tmp_3_fu_960_p4;
wire   [0:0] icmp_ln851_3_fu_954_p2;
wire   [16:0] add_ln851_fu_969_p2;
wire   [16:0] select_ln851_fu_975_p3;
wire   [21:0] trunc_ln851_3_fu_990_p1;
wire   [16:0] tmp_5_fu_999_p4;
wire   [0:0] icmp_ln851_4_fu_993_p2;
wire   [16:0] add_ln851_1_fu_1008_p2;
wire   [16:0] select_ln851_1_fu_1014_p3;
wire   [31:0] zext_ln891_fu_1033_p1;
wire   [0:0] icmp_ln406_fu_1037_p2;
wire   [0:0] xor_ln406_fu_1042_p2;
wire   [0:0] icmp_ln406_1_fu_1048_p2;
wire   [31:0] zext_ln879_1_fu_1059_p1;
wire   [0:0] icmp_ln879_3_fu_1073_p2;
wire   [53:0] zext_ln1494_1_fu_1102_p1;
wire   [0:0] icmp_ln1494_1_fu_1106_p2;
wire   [0:0] tmp_11_fu_1094_p3;
wire   [41:0] select_ln257_fu_1111_p3;
wire   [0:0] icmp_ln851_5_fu_1156_p2;
wire   [16:0] add_ln851_2_fu_1161_p2;
wire   [0:0] tmp_12_fu_1149_p3;
wire   [16:0] select_ln851_2_fu_1166_p3;
wire   [16:0] indexx_0_V_fu_1173_p3;
wire   [1:0] trunc_ln396_fu_1180_p1;
wire   [23:0] shl_ln_fu_1184_p3;
wire   [31:0] zext_ln425_fu_1197_p1;
wire   [0:0] icmp_ln426_fu_1205_p2;
wire   [17:0] zext_ln426_fu_1201_p1;
wire   [17:0] zext_ln426_1_fu_1210_p1;
wire   [23:0] sub_ln396_fu_1192_p2;
wire   [23:0] select_ln488_1_fu_1270_p3;
wire   [23:0] shl_ln728_5_fu_1301_p3;
wire   [23:0] sub_ln728_fu_1308_p2;
wire   [23:0] select_ln488_fu_1313_p3;
wire   [11:0] trunc_ln6_fu_1320_p4;
wire   [21:0] mul_ln1118_fu_1979_p2;
wire   [7:0] trunc_ln647_3_fu_1338_p1;
wire   [8:0] zext_ln215_fu_1358_p1;
wire   [8:0] zext_ln215_1_fu_1361_p1;
wire   [7:0] trunc_ln647_1_fu_1330_p1;
wire   [7:0] trunc_ln647_2_fu_1334_p1;
wire   [8:0] zext_ln215_2_fu_1371_p1;
wire   [8:0] zext_ln215_3_fu_1375_p1;
wire   [8:0] add_ln1353_fu_1365_p2;
wire   [8:0] add_ln1353_1_fu_1379_p2;
wire   [9:0] zext_ln215_4_fu_1385_p1;
wire   [9:0] zext_ln215_5_fu_1389_p1;
wire  signed [8:0] sub_ln1354_1_fu_1399_p2;
wire   [7:0] p_Result_i_i_i_i33_3_fu_1439_p4;
wire   [8:0] zext_ln215_6_fu_1449_p1;
wire   [8:0] zext_ln215_7_fu_1452_p1;
wire   [7:0] p_Result_i_i_i_i33_2_fu_1419_p4;
wire   [7:0] p_Result_i_i_i_i35_3_fu_1429_p4;
wire   [8:0] zext_ln215_8_fu_1462_p1;
wire   [8:0] zext_ln215_9_fu_1466_p1;
wire   [8:0] add_ln1353_2_fu_1456_p2;
wire   [8:0] add_ln1353_3_fu_1470_p2;
wire   [9:0] zext_ln215_10_fu_1476_p1;
wire   [9:0] zext_ln215_11_fu_1480_p1;
wire  signed [8:0] sub_ln1354_4_fu_1490_p2;
wire   [7:0] p_Result_i_i_i_i33_5_fu_1526_p4;
wire   [8:0] zext_ln215_12_fu_1536_p1;
wire   [8:0] zext_ln215_13_fu_1539_p1;
wire   [7:0] p_Result_i_i_i_i33_4_fu_1506_p4;
wire   [7:0] p_Result_i_i_i_i35_5_fu_1516_p4;
wire   [8:0] zext_ln215_14_fu_1549_p1;
wire   [8:0] zext_ln215_15_fu_1553_p1;
wire   [8:0] add_ln1353_4_fu_1543_p2;
wire   [8:0] add_ln1353_5_fu_1557_p2;
wire   [9:0] zext_ln215_16_fu_1563_p1;
wire   [9:0] zext_ln215_17_fu_1567_p1;
wire  signed [8:0] sub_ln1354_7_fu_1577_p2;
wire  signed [21:0] grp_fu_2012_p3;
wire  signed [21:0] grp_fu_2029_p3;
wire  signed [21:0] grp_fu_2046_p3;
wire   [17:0] shl_ln1_fu_1635_p3;
wire  signed [23:0] sext_ln703_1_fu_1642_p1;
wire   [23:0] zext_ln1192_fu_1645_p1;
wire   [23:0] add_ln1192_2_fu_1649_p2;
wire   [9:0] trunc_ln851_5_fu_1663_p1;
wire   [7:0] trunc_ln7_fu_1673_p4;
wire   [0:0] icmp_ln851_fu_1667_p2;
wire   [7:0] add_ln851_3_fu_1683_p2;
wire   [0:0] tmp_13_fu_1655_p3;
wire   [7:0] select_ln851_3_fu_1689_p3;
wire   [17:0] shl_ln728_1_fu_1705_p3;
wire  signed [23:0] sext_ln703_3_fu_1712_p1;
wire   [23:0] zext_ln1192_1_fu_1715_p1;
wire   [23:0] add_ln1192_5_fu_1719_p2;
wire   [9:0] trunc_ln851_6_fu_1733_p1;
wire   [7:0] trunc_ln851_1_fu_1743_p4;
wire   [0:0] icmp_ln851_1_fu_1737_p2;
wire   [7:0] add_ln851_4_fu_1753_p2;
wire   [0:0] tmp_14_fu_1725_p3;
wire   [7:0] select_ln851_4_fu_1759_p3;
wire   [17:0] shl_ln728_2_fu_1775_p3;
wire  signed [23:0] sext_ln703_5_fu_1782_p1;
wire   [23:0] zext_ln1192_2_fu_1785_p1;
wire   [23:0] add_ln1192_8_fu_1789_p2;
wire   [9:0] trunc_ln851_7_fu_1803_p1;
wire   [7:0] trunc_ln851_2_fu_1813_p4;
wire   [0:0] icmp_ln851_2_fu_1807_p2;
wire   [7:0] add_ln851_5_fu_1823_p2;
wire   [0:0] tmp_15_fu_1795_p3;
wire   [7:0] select_ln851_5_fu_1829_p3;
wire   [31:0] zext_ln879_fu_1859_p1;
wire   [0:0] icmp_ln879_fu_1863_p2;
wire   [0:0] and_ln507_fu_1868_p2;
wire   [0:0] icmp_ln879_1_fu_1873_p2;
wire   [0:0] or_ln508_fu_1878_p2;
wire   [31:0] output_rows_count_fu_1884_p2;
wire   [31:0] select_ln507_fu_1890_p3;
wire   [31:0] zext_ln891_1_fu_1905_p1;
wire   [31:0] first_row_index_fu_1914_p2;
wire   [31:0] read_rows_count_fu_1926_p2;
wire   [0:0] icmp_ln891_fu_1909_p2;
wire   [0:0] xor_ln511_fu_1939_p2;
wire   [0:0] and_ln891_fu_1944_p2;
wire   [31:0] read_rows_count_2_fu_1932_p3;
wire   [0:0] icmp_ln520_fu_1920_p2;
wire   [0:0] or_ln891_fu_1958_p2;
wire   [31:0] select_ln891_fu_1963_p3;
wire   [11:0] mul_ln1118_fu_1979_p0;
wire   [11:0] mul_ln1118_fu_1979_p1;
wire   [11:0] mul_ln1118_2_fu_1986_p0;
wire   [20:0] zext_ln1118_3_fu_1415_p1;
wire   [11:0] mul_ln1118_5_fu_1992_p0;
wire   [11:0] mul_ln1118_8_fu_1998_p0;
wire   [11:0] grp_fu_2004_p0;
wire   [21:0] zext_ln1118_2_fu_1596_p1;
wire   [11:0] grp_fu_2012_p0;
wire   [20:0] zext_ln1118_4_fu_1602_p1;
wire   [11:0] grp_fu_2021_p0;
wire   [11:0] grp_fu_2029_p0;
wire   [11:0] grp_fu_2038_p0;
wire   [11:0] grp_fu_2046_p0;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [21:0] mul_ln1118_fu_1979_p00;
wire   [21:0] mul_ln1118_fu_1979_p10;
reg    ap_condition_203;
reg    ap_condition_198;
reg    ap_condition_743;
reg    ap_condition_360;
reg    ap_condition_723;
reg    ap_condition_77;
reg    ap_condition_1867;
reg    ap_condition_1872;
reg    ap_condition_446;
reg    ap_condition_453;
reg    ap_condition_1879;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 grp_xfUDivResize_fu_518_ap_start_reg = 1'b0;
end

resizeNNBilinear_dEe #(
    .DataWidth( 24 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
line_buffer_0_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_0_0_V_address0),
    .ce0(line_buffer_0_0_V_ce0),
    .we0(line_buffer_0_0_V_we0),
    .d0(line_buffer_0_0_V_d0),
    .q0(line_buffer_0_0_V_q0),
    .address1(line_buffer_0_0_V_address1),
    .ce1(line_buffer_0_0_V_ce1),
    .q1(line_buffer_0_0_V_q1)
);

resizeNNBilinear_dEe #(
    .DataWidth( 24 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
line_buffer_1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_1_0_V_address0),
    .ce0(line_buffer_1_0_V_ce0),
    .we0(line_buffer_1_0_V_we0),
    .d0(line_buffer_1_0_V_d0),
    .q0(line_buffer_1_0_V_q0),
    .address1(line_buffer_1_0_V_address1),
    .ce1(line_buffer_1_0_V_ce1),
    .q1(line_buffer_1_0_V_q1)
);

resizeNNBilinear_dEe #(
    .DataWidth( 24 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
line_buffer_2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_2_0_V_address0),
    .ce0(line_buffer_2_0_V_ce0),
    .we0(line_buffer_2_0_V_we0),
    .d0(read_pixel_V_1_fu_170),
    .q0(line_buffer_2_0_V_q0),
    .address1(line_buffer_2_0_V_address1),
    .ce1(line_buffer_2_0_V_ce1),
    .q1(line_buffer_2_0_V_q1)
);

xfUDivResize grp_xfUDivResize_fu_518(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xfUDivResize_fu_518_ap_start),
    .ap_done(grp_xfUDivResize_fu_518_ap_done),
    .ap_idle(grp_xfUDivResize_fu_518_ap_idle),
    .ap_ready(grp_xfUDivResize_fu_518_ap_ready),
    .in_n(grp_xfUDivResize_fu_518_in_n),
    .in_d(grp_xfUDivResize_fu_518_in_d),
    .ap_return(grp_xfUDivResize_fu_518_ap_return)
);

scaleCompute grp_scaleCompute_fu_535(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .currindex(grp_scaleCompute_fu_535_currindex),
    .inscale_V(grp_scaleCompute_fu_535_inscale_V),
    .ap_return(grp_scaleCompute_fu_535_ap_return),
    .ap_ce(grp_scaleCompute_fu_535_ap_ce)
);

resize_accel_mul_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
resize_accel_mul_g8j_U24(
    .din0(mul_ln1118_fu_1979_p0),
    .din1(mul_ln1118_fu_1979_p1),
    .dout(mul_ln1118_fu_1979_p2)
);

resize_accel_mul_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 21 ))
resize_accel_mul_hbi_U25(
    .din0(mul_ln1118_2_fu_1986_p0),
    .din1(sub_ln1354_1_fu_1399_p2),
    .dout(mul_ln1118_2_fu_1986_p2)
);

resize_accel_mul_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 21 ))
resize_accel_mul_hbi_U26(
    .din0(mul_ln1118_5_fu_1992_p0),
    .din1(sub_ln1354_4_fu_1490_p2),
    .dout(mul_ln1118_5_fu_1992_p2)
);

resize_accel_mul_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 21 ))
resize_accel_mul_hbi_U27(
    .din0(mul_ln1118_8_fu_1998_p0),
    .din1(sub_ln1354_7_fu_1577_p2),
    .dout(mul_ln1118_8_fu_1998_p2)
);

resize_accel_mac_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
resize_accel_mac_ibs_U28(
    .din0(grp_fu_2004_p0),
    .din1(sub_ln1354_reg_2457),
    .din2(grp_fu_2012_p3),
    .dout(grp_fu_2004_p3)
);

resize_accel_mac_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
resize_accel_mac_jbC_U29(
    .din0(grp_fu_2012_p0),
    .din1(sub_ln1354_2_reg_2462),
    .din2(mul_ln1118_2_reg_2467),
    .dout(grp_fu_2012_p3)
);

resize_accel_mac_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
resize_accel_mac_ibs_U30(
    .din0(grp_fu_2021_p0),
    .din1(sub_ln1354_3_reg_2472),
    .din2(grp_fu_2029_p3),
    .dout(grp_fu_2021_p3)
);

resize_accel_mac_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
resize_accel_mac_jbC_U31(
    .din0(grp_fu_2029_p0),
    .din1(sub_ln1354_5_reg_2477),
    .din2(mul_ln1118_5_reg_2482),
    .dout(grp_fu_2029_p3)
);

resize_accel_mac_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
resize_accel_mac_ibs_U32(
    .din0(grp_fu_2038_p0),
    .din1(sub_ln1354_6_reg_2487),
    .din2(grp_fu_2046_p3),
    .dout(grp_fu_2038_p3)
);

resize_accel_mac_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
resize_accel_mac_jbC_U33(
    .din0(grp_fu_2046_p0),
    .din1(sub_ln1354_8_reg_2492),
    .din2(mul_ln1118_8_reg_2497),
    .dout(grp_fu_2046_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state11)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xfUDivResize_fu_518_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_xfUDivResize_fu_518_ap_start_reg <= 1'b1;
        end else if ((grp_xfUDivResize_fu_518_ap_ready == 1'b1)) begin
            grp_xfUDivResize_fu_518_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if ((1'b1 == ap_condition_198)) begin
            P0Buf_0_V_3_reg_473 <= reg_574;
        end else if ((1'b1 == ap_condition_203)) begin
            P0Buf_0_V_3_reg_473 <= reg_568;
        end else if (((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1))) begin
            P0Buf_0_V_3_reg_473 <= reg_580;
        end else if ((1'b1 == 1'b1)) begin
            P0Buf_0_V_3_reg_473 <= ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_360)) begin
        if ((1'b1 == ap_condition_743)) begin
            ap_phi_reg_pp1_iter1_flag_write_2_reg_457 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter0_flag_write_2_reg_457;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_723)) begin
        if (((icmp_ln403_reg_2240 == 1'd1) & (icmp_ln387_reg_2303 == 1'd1))) begin
            ap_phi_reg_pp1_iter2_flag_write_2_reg_457 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter1_flag_write_2_reg_457;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if ((1'b1 == ap_condition_77)) begin
            ap_phi_reg_pp1_iter4_flag_write_2_reg_457 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter4_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter3_flag_write_2_reg_457;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if ((1'b1 == ap_condition_198)) begin
            ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_0_0_V_q1;
        end else if ((1'b1 == ap_condition_203)) begin
            ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_2_0_V_q1;
        end else if (((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1))) begin
            ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= line_buffer_1_0_V_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if ((1'b1 == ap_condition_198)) begin
            ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_2_0_V_q1;
        end else if ((1'b1 == ap_condition_203)) begin
            ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_1_0_V_q1;
        end else if (((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1))) begin
            ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= line_buffer_0_0_V_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i12_0_reg_434 <= i_reg_2235;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i12_0_reg_434 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        indexstores_reg_422 <= first_row_index_1_fu_1971_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indexstores_reg_422 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indexy_V_fu_174 <= tmp_V_fu_1022_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indexy_V_fu_174 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_656_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_365 <= add_ln331_fu_661_p2;
    end else if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_365 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2303 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j13_0_reg_445 <= j_1_reg_2307;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        j13_0_reg_445 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_656_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_0_reg_387 <= j_fu_699_p2;
    end else if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_reg_387 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        nextYScale_V_1_fu_178 <= nextYScale_V_fu_983_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        nextYScale_V_1_fu_178 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        output_rows_count_0_reg_410 <= select_ln506_fu_1898_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_rows_count_0_reg_410 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_reg_2129 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_rows_count_0_reg_376 <= select_ln321_1_reg_2138;
    end else if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        read_rows_count_0_reg_376 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        read_rows_count_1_reg_398 <= read_rows_count_3_fu_1950_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        read_rows_count_1_reg_398 <= 32'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        Yscale64_reg_2114 <= grp_xfUDivResize_fu_518_ap_return;
        scaley_V_reg_2119 <= scaley_V_fu_636_p1;
        tmp_4_reg_2124[32 : 1] <= tmp_4_fu_640_p3[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (((1'd1 == and_ln487_reg_2331_pp1_iter7_reg) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_reg_2327_pp1_iter7_reg)) | ((icmp_ln487_1_reg_2335_pp1_iter7_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter7_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        add_ln1192_1_reg_2502 <= grp_fu_2004_p3;
        add_ln1192_4_reg_2507 <= grp_fu_2021_p3;
        add_ln1192_7_reg_2512 <= grp_fu_2038_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln1192_reg_2276 <= add_ln1192_fu_866_p2;
        add_ln485_reg_2258 <= add_ln485_fu_844_p2;
        add_ln486_reg_2266 <= add_ln486_fu_850_p2;
        icmp_ln420_reg_2254 <= icmp_ln420_fu_838_p2;
        icmp_ln441_reg_2272 <= icmp_ln441_fu_856_p2;
        p_Result_1_reg_2293 <= p_Val2_9_fu_920_p3[32'd41];
        p_Result_s_reg_2282 <= ret_V_fu_871_p2[32'd42];
        p_Val2_9_reg_2287 <= p_Val2_9_fu_920_p3;
        trunc_ln728_reg_2298 <= trunc_ln728_fu_936_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln426_reg_2361 <= add_ln426_fu_1214_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln484_reg_2197 <= add_ln484_fu_730_p2;
        indexx_pre_V_reg_2227[41 : 22] <= indexx_pre_V_fu_799_p3[41 : 22];
        indexy_pre_V_reg_2217[41 : 22] <= indexy_pre_V_fu_774_p3[41 : 22];
        loop_col_count_reg_2187 <= loop_col_count_fu_719_p3;
        loop_row_count_reg_2182 <= loop_row_count_fu_709_p3;
        p_Val2_12_reg_2192 <= p_Val2_12_fu_725_p2;
        p_Val2_6_reg_2202[37 : 0] <= p_Val2_6_fu_744_p1[37 : 0];
        rhs_V_reg_2207[37 : 0] <= rhs_V_fu_748_p1[37 : 0];
        shl_ln728_3_reg_2212[53 : 22] <= shl_ln728_3_fu_757_p3[53 : 22];
        shl_ln728_6_reg_2222[53 : 22] <= shl_ln728_6_fu_782_p3[53 : 22];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (icmp_ln403_reg_2240 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln406_reg_2317 <= and_ln406_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln406_reg_2317_pp1_iter1_reg <= and_ln406_reg_2317;
        and_ln485_reg_2327_pp1_iter1_reg <= and_ln485_reg_2327;
        and_ln487_reg_2331_pp1_iter1_reg <= and_ln487_reg_2331;
        icmp_ln387_reg_2303 <= icmp_ln387_fu_940_p2;
        icmp_ln387_reg_2303_pp1_iter1_reg <= icmp_ln387_reg_2303;
        icmp_ln487_1_reg_2335_pp1_iter1_reg <= icmp_ln487_1_reg_2335;
        icmp_ln879_2_reg_2321_pp1_iter1_reg <= icmp_ln879_2_reg_2321;
        j13_0_reg_445_pp1_iter1_reg <= j13_0_reg_445;
        trunc_ln728_1_reg_2312_pp1_iter1_reg <= trunc_ln728_1_reg_2312;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        and_ln406_reg_2317_pp1_iter2_reg <= and_ln406_reg_2317_pp1_iter1_reg;
        and_ln485_reg_2327_pp1_iter2_reg <= and_ln485_reg_2327_pp1_iter1_reg;
        and_ln485_reg_2327_pp1_iter3_reg <= and_ln485_reg_2327_pp1_iter2_reg;
        and_ln485_reg_2327_pp1_iter4_reg <= and_ln485_reg_2327_pp1_iter3_reg;
        and_ln485_reg_2327_pp1_iter5_reg <= and_ln485_reg_2327_pp1_iter4_reg;
        and_ln485_reg_2327_pp1_iter6_reg <= and_ln485_reg_2327_pp1_iter5_reg;
        and_ln485_reg_2327_pp1_iter7_reg <= and_ln485_reg_2327_pp1_iter6_reg;
        and_ln485_reg_2327_pp1_iter8_reg <= and_ln485_reg_2327_pp1_iter7_reg;
        and_ln485_reg_2327_pp1_iter9_reg <= and_ln485_reg_2327_pp1_iter8_reg;
        and_ln487_reg_2331_pp1_iter2_reg <= and_ln487_reg_2331_pp1_iter1_reg;
        and_ln487_reg_2331_pp1_iter3_reg <= and_ln487_reg_2331_pp1_iter2_reg;
        and_ln487_reg_2331_pp1_iter4_reg <= and_ln487_reg_2331_pp1_iter3_reg;
        and_ln487_reg_2331_pp1_iter5_reg <= and_ln487_reg_2331_pp1_iter4_reg;
        and_ln487_reg_2331_pp1_iter6_reg <= and_ln487_reg_2331_pp1_iter5_reg;
        and_ln487_reg_2331_pp1_iter7_reg <= and_ln487_reg_2331_pp1_iter6_reg;
        and_ln487_reg_2331_pp1_iter8_reg <= and_ln487_reg_2331_pp1_iter7_reg;
        and_ln487_reg_2331_pp1_iter9_reg <= and_ln487_reg_2331_pp1_iter8_reg;
        icmp_ln387_reg_2303_pp1_iter2_reg <= icmp_ln387_reg_2303_pp1_iter1_reg;
        icmp_ln387_reg_2303_pp1_iter3_reg <= icmp_ln387_reg_2303_pp1_iter2_reg;
        icmp_ln387_reg_2303_pp1_iter4_reg <= icmp_ln387_reg_2303_pp1_iter3_reg;
        icmp_ln387_reg_2303_pp1_iter5_reg <= icmp_ln387_reg_2303_pp1_iter4_reg;
        icmp_ln487_1_reg_2335_pp1_iter2_reg <= icmp_ln487_1_reg_2335_pp1_iter1_reg;
        icmp_ln487_1_reg_2335_pp1_iter3_reg <= icmp_ln487_1_reg_2335_pp1_iter2_reg;
        icmp_ln487_1_reg_2335_pp1_iter4_reg <= icmp_ln487_1_reg_2335_pp1_iter3_reg;
        icmp_ln487_1_reg_2335_pp1_iter5_reg <= icmp_ln487_1_reg_2335_pp1_iter4_reg;
        icmp_ln487_1_reg_2335_pp1_iter6_reg <= icmp_ln487_1_reg_2335_pp1_iter5_reg;
        icmp_ln487_1_reg_2335_pp1_iter7_reg <= icmp_ln487_1_reg_2335_pp1_iter6_reg;
        icmp_ln487_1_reg_2335_pp1_iter8_reg <= icmp_ln487_1_reg_2335_pp1_iter7_reg;
        icmp_ln487_1_reg_2335_pp1_iter9_reg <= icmp_ln487_1_reg_2335_pp1_iter8_reg;
        icmp_ln879_2_reg_2321_pp1_iter2_reg <= icmp_ln879_2_reg_2321_pp1_iter1_reg;
        icmp_ln879_2_reg_2321_pp1_iter3_reg <= icmp_ln879_2_reg_2321_pp1_iter2_reg;
        icmp_ln879_2_reg_2321_pp1_iter4_reg <= icmp_ln879_2_reg_2321_pp1_iter3_reg;
        icmp_ln879_2_reg_2321_pp1_iter5_reg <= icmp_ln879_2_reg_2321_pp1_iter4_reg;
        icmp_ln879_2_reg_2321_pp1_iter6_reg <= icmp_ln879_2_reg_2321_pp1_iter5_reg;
        j13_0_reg_445_pp1_iter2_reg <= j13_0_reg_445_pp1_iter1_reg;
        j13_0_reg_445_pp1_iter3_reg <= j13_0_reg_445_pp1_iter2_reg;
        p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg <= p_Result_i_i_i_i35_2_reg_2440;
        p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg <= p_Result_i_i_i_i35_2_reg_2440_pp1_iter7_reg;
        p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg <= p_Result_i_i_i_i35_4_reg_2446;
        p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg <= p_Result_i_i_i_i35_4_reg_2446_pp1_iter7_reg;
        trunc_ln647_reg_2434_pp1_iter7_reg <= trunc_ln647_reg_2434;
        trunc_ln647_reg_2434_pp1_iter8_reg <= trunc_ln647_reg_2434_pp1_iter7_reg;
        trunc_ln708_1_reg_2398_pp1_iter5_reg <= trunc_ln708_1_reg_2398;
        trunc_ln708_1_reg_2398_pp1_iter6_reg <= trunc_ln708_1_reg_2398_pp1_iter5_reg;
        trunc_ln708_1_reg_2398_pp1_iter7_reg <= trunc_ln708_1_reg_2398_pp1_iter6_reg;
        trunc_ln728_1_reg_2312_pp1_iter2_reg <= trunc_ln728_1_reg_2312_pp1_iter1_reg;
        trunc_ln728_1_reg_2312_pp1_iter3_reg <= trunc_ln728_1_reg_2312_pp1_iter2_reg;
        trunc_ln728_1_reg_2312_pp1_iter4_reg <= trunc_ln728_1_reg_2312_pp1_iter3_reg;
        trunc_ln728_1_reg_2312_pp1_iter5_reg <= trunc_ln728_1_reg_2312_pp1_iter4_reg;
        trunc_ln728_1_reg_2312_pp1_iter6_reg <= trunc_ln728_1_reg_2312_pp1_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (icmp_ln484_reg_2249 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln485_reg_2327 <= and_ln485_fu_1068_p2;
        icmp_ln879_2_reg_2321 <= icmp_ln879_2_fu_1063_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_fu_1068_p2) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln487_reg_2331 <= and_ln487_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496;
        j_1_reg_2307 <= j_1_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_496;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_496;
        ap_phi_reg_pp1_iter3_flag_write_2_reg_457 <= ap_phi_reg_pp1_iter2_flag_write_2_reg_457;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_496;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_496;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter6_P0Buf_1_V_3_reg_507 <= ap_phi_reg_pp1_iter5_P0Buf_1_V_3_reg_507;
        ap_phi_reg_pp1_iter6_P0Buf_V_1_1_reg_496 <= ap_phi_reg_pp1_iter5_P0Buf_V_1_1_reg_496;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_reg_2235 <= i_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln331_reg_2129 <= icmp_ln331_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln380_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln403_reg_2240 <= icmp_ln403_fu_828_p2;
        icmp_ln484_reg_2249 <= icmp_ln484_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln485_fu_1068_p2) & (icmp_ln387_fu_940_p2 == 1'd1) & (icmp_ln484_reg_2249 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln487_1_reg_2335 <= grp_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_656_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_0_V_s_reg_2147 <= zext_ln342_fu_693_p1;
        line_buffer_1_0_V_s_reg_2152 <= zext_ln342_fu_693_p1;
        trunc_ln321_reg_2143 <= trunc_ln321_fu_689_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (((1'd1 == and_ln487_reg_2331_pp1_iter6_reg) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_reg_2327_pp1_iter6_reg)) | ((icmp_ln487_1_reg_2335_pp1_iter6_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter6_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        mul_ln1118_2_reg_2467 <= mul_ln1118_2_fu_1986_p2;
        mul_ln1118_5_reg_2482 <= mul_ln1118_5_fu_1992_p2;
        mul_ln1118_8_reg_2497 <= mul_ln1118_8_fu_1998_p2;
        sub_ln1354_2_reg_2462 <= sub_ln1354_2_fu_1405_p2;
        sub_ln1354_3_reg_2472 <= sub_ln1354_3_fu_1484_p2;
        sub_ln1354_5_reg_2477 <= sub_ln1354_5_fu_1496_p2;
        sub_ln1354_6_reg_2487 <= sub_ln1354_6_fu_1571_p2;
        sub_ln1354_8_reg_2492 <= sub_ln1354_8_fu_1583_p2;
        sub_ln1354_reg_2457 <= sub_ln1354_fu_1393_p2;
        trunc_ln708_2_reg_2452 <= {{mul_ln1118_fu_1979_p2[21:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (((1'd1 == and_ln487_reg_2331_pp1_iter5_reg) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_reg_2327_pp1_iter5_reg)) | ((icmp_ln487_1_reg_2335_pp1_iter5_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter5_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        p_Result_i_i_i_i35_2_reg_2440 <= {{select_ln488_1_fu_1270_p3[15:8]}};
        p_Result_i_i_i_i35_4_reg_2446 <= {{select_ln488_1_fu_1270_p3[23:16]}};
        trunc_ln647_reg_2434 <= trunc_ln647_fu_1277_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln406_reg_2317_pp1_iter2_reg) & (icmp_ln387_reg_2303_pp1_iter2_reg == 1'd1) & (icmp_ln403_reg_2240 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        read_pixel_V_1_fu_170 <= imgInput_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_568 <= line_buffer_2_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln420_reg_2254 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_574 <= line_buffer_0_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln420_reg_2254 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_580 <= line_buffer_1_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        scalex_V_reg_2109 <= scalex_V_fu_632_p1;
        trunc_ln305_reg_2104 <= trunc_ln305_fu_627_p1;
        ynew_reg_2099[63 : 32] <= ynew_fu_618_p3[63 : 32];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2303_pp1_iter2_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln1495_reg_2339 <= select_ln1495_fu_1118_p3;
        tmp_7_reg_2349 <= {{select_ln1495_fu_1118_p3[38:22]}};
        trunc_ln396_1_reg_2356 <= trunc_ln396_1_fu_1140_p1;
        trunc_ln851_4_reg_2344 <= trunc_ln851_4_fu_1126_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_656_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln321_1_reg_2138 <= select_ln321_1_fu_681_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (((1'd1 == and_ln487_reg_2331_pp1_iter8_reg) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_reg_2327_pp1_iter8_reg)) | ((icmp_ln487_1_reg_2335_pp1_iter8_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter8_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        select_ln850_3_reg_2522 <= select_ln850_3_fu_1767_p3;
        select_ln850_4_reg_2527 <= select_ln850_4_fu_1837_p3;
        select_ln850_reg_2517 <= select_ln850_fu_1697_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        trunc_ln304_reg_2078 <= trunc_ln304_fu_613_p1;
        xnew_reg_2073[63 : 32] <= xnew_fu_604_p3[63 : 32];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (((1'd1 == and_ln487_reg_2331_pp1_iter3_reg) & (icmp_ln484_reg_2249 == 1'd0) & (1'd0 == and_ln485_reg_2327_pp1_iter3_reg)) | ((icmp_ln487_1_reg_2335_pp1_iter3_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter3_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        trunc_ln708_1_reg_2398 <= {{sub_ln396_fu_1192_p2[23:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        trunc_ln728_1_reg_2312 <= trunc_ln728_1_fu_1029_p1;
    end
end

always @ (*) begin
    if ((icmp_ln331_fu_656_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln387_fu_940_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln380_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1)) begin
        if (((icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0))) begin
            ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 = reg_574;
        end else if (((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0))) begin
            ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 = reg_568;
        end else if ((icmp_ln420_reg_2254 == 1'd1)) begin
            ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 = reg_580;
        end else begin
            ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 = ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
        end
    end else begin
        ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 = ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473;
    end
end

always @ (*) begin
    if ((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1)) begin
        if (((icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0))) begin
            ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 = reg_568;
        end else if (((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0))) begin
            ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 = reg_580;
        end else if ((icmp_ln420_reg_2254 == 1'd1)) begin
            ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 = reg_574;
        end else begin
            ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 = ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485;
        end
    end else begin
        ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6 = ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2303 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j13_0_phi_fu_449_p4 = j_1_reg_2307;
    end else begin
        ap_phi_mux_j13_0_phi_fu_449_p4 = j13_0_reg_445;
    end
end

always @ (*) begin
    if (((icmp_ln331_reg_2129 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_read_rows_count_0_phi_fu_380_p4 = select_ln321_1_reg_2138;
    end else begin
        ap_phi_mux_read_rows_count_0_phi_fu_380_p4 = read_rows_count_0_reg_376;
    end
end

always @ (*) begin
    if (((icmp_ln380_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp137) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_scaleCompute_fu_535_ap_ce = 1'b1;
    end else begin
        grp_scaleCompute_fu_535_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_scaleCompute_fu_535_currindex = ap_phi_mux_j13_0_phi_fu_449_p4;
    end else if (((icmp_ln380_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_scaleCompute_fu_535_currindex = output_rows_count_0_reg_410;
    end else begin
        grp_scaleCompute_fu_535_currindex = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln387_fu_940_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_scaleCompute_fu_535_inscale_V = scalex_V_reg_2109;
    end else if (((icmp_ln380_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_scaleCompute_fu_535_inscale_V = scaley_V_reg_2119;
    end else begin
        grp_scaleCompute_fu_535_inscale_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_xfUDivResize_fu_518_in_d = trunc_ln305_reg_2104;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_xfUDivResize_fu_518_in_d = trunc_ln304_reg_2078;
    end else begin
        grp_xfUDivResize_fu_518_in_d = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_xfUDivResize_fu_518_in_n = ynew_reg_2099;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_xfUDivResize_fu_518_in_n = xnew_reg_2073;
    end else begin
        grp_xfUDivResize_fu_518_in_n = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln406_reg_2317_pp1_iter2_reg) & (icmp_ln387_reg_2303_pp1_iter2_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln403_reg_2240 == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((icmp_ln331_reg_2129 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        imgInput_data_V_blk_n = imgInput_data_V_empty_n;
    end else begin
        imgInput_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op186_read_state14 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln331_reg_2129 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        imgInput_data_V_read = 1'b1;
    end else begin
        imgInput_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (((1'd1 == and_ln487_reg_2331_pp1_iter9_reg) & (1'd0 == and_ln485_reg_2327_pp1_iter9_reg) & (icmp_ln484_reg_2249 == 1'd0)) | ((icmp_ln487_1_reg_2335_pp1_iter9_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter9_reg) & (icmp_ln484_reg_2249 == 1'd0))))) begin
        imgOutput_data_V_blk_n = imgOutput_data_V_full_n;
    end else begin
        imgOutput_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b1) & (ap_predicate_op398_write_state21 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        imgOutput_data_V_write = 1'b1;
    end else begin
        imgOutput_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_0_0_V_address0 = line_buffer_0_0_V_1_gep_fu_290_p3;
    end else if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_0_0_V_address0 = sext_ln459_fu_1235_p1;
    end else if (((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_0_0_V_address0 = zext_ln428_fu_1220_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_0_V_address0 = line_buffer_0_0_V_s_reg_2147;
    end else begin
        line_buffer_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1867)) begin
        if (((icmp_ln420_reg_2254 == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0))) begin
            line_buffer_0_0_V_address1 = zext_ln429_fu_1265_p1;
        end else if (((icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0))) begin
            line_buffer_0_0_V_address1 = zext_ln471_fu_1255_p1;
        end else begin
            line_buffer_0_0_V_address1 = 'bx;
        end
    end else begin
        line_buffer_0_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_0_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln420_reg_2254 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_0_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_0_0_V_d0 = read_pixel_V_1_fu_170;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_0_V_d0 = imgInput_data_V_dout;
    end else begin
        line_buffer_0_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln321_reg_2143 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_0_0_V_we0 = 1'b1;
    end else begin
        line_buffer_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_1_0_V_address0 = line_buffer_1_0_V_1_gep_fu_297_p3;
    end else if (((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_1_0_V_address0 = zext_ln428_fu_1220_p1;
    end else if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_1_0_V_address0 = sext_ln480_fu_1230_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_1_0_V_address0 = line_buffer_1_0_V_s_reg_2152;
    end else begin
        line_buffer_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1867)) begin
        if ((icmp_ln420_reg_2254 == 1'd1)) begin
            line_buffer_1_0_V_address1 = zext_ln429_fu_1265_p1;
        end else if ((1'b1 == ap_condition_1872)) begin
            line_buffer_1_0_V_address1 = zext_ln450_fu_1260_p1;
        end else begin
            line_buffer_1_0_V_address1 = 'bx;
        end
    end else begin
        line_buffer_1_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_1_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln420_reg_2254 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_1_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_1_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        line_buffer_1_0_V_d0 = read_pixel_V_1_fu_170;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_1_0_V_d0 = imgInput_data_V_dout;
    end else begin
        line_buffer_1_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln321_reg_2143 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_1_0_V_we0 = 1'b1;
    end else begin
        line_buffer_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln420_reg_2254 == 1'd1))) begin
            line_buffer_2_0_V_address0 = sext_ln438_fu_1240_p1;
        end else if ((1'b1 == ap_condition_453)) begin
            line_buffer_2_0_V_address0 = line_buffer_2_0_V_1_gep_fu_276_p3;
        end else if ((1'b1 == ap_condition_446)) begin
            line_buffer_2_0_V_address0 = zext_ln428_fu_1220_p1;
        end else begin
            line_buffer_2_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1879)) begin
        if ((icmp_ln441_reg_2272 == 1'd1)) begin
            line_buffer_2_0_V_address1 = zext_ln450_fu_1260_p1;
        end else if (((icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln441_reg_2272 == 1'd0))) begin
            line_buffer_2_0_V_address1 = zext_ln471_fu_1255_p1;
        end else begin
            line_buffer_2_0_V_address1 = 'bx;
        end
    end else begin
        line_buffer_2_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_2_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_2_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_flag_write_2_phi_fu_462_p6 == 1'd1) & (icmp_ln420_reg_2254 == 1'd1) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        line_buffer_2_0_V_we0 = 1'b1;
    end else begin
        line_buffer_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_xfUDivResize_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln331_fu_656_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln331_fu_656_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln380_fu_817_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln387_fu_940_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter9 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter9 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln387_fu_940_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_2_fu_1649_p2 = ($signed(sext_ln703_1_fu_1642_p1) + $signed(zext_ln1192_fu_1645_p1));

assign add_ln1192_5_fu_1719_p2 = ($signed(sext_ln703_3_fu_1712_p1) + $signed(zext_ln1192_1_fu_1715_p1));

assign add_ln1192_8_fu_1789_p2 = ($signed(sext_ln703_5_fu_1782_p1) + $signed(zext_ln1192_2_fu_1785_p1));

assign add_ln1192_fu_866_p0 = grp_scaleCompute_fu_535_ap_return;

assign add_ln1192_fu_866_p2 = ($signed(add_ln1192_fu_866_p0) + $signed(p_Val2_6_reg_2202));

assign add_ln1353_1_fu_1379_p2 = (zext_ln215_2_fu_1371_p1 + zext_ln215_3_fu_1375_p1);

assign add_ln1353_2_fu_1456_p2 = (zext_ln215_6_fu_1449_p1 + zext_ln215_7_fu_1452_p1);

assign add_ln1353_3_fu_1470_p2 = (zext_ln215_8_fu_1462_p1 + zext_ln215_9_fu_1466_p1);

assign add_ln1353_4_fu_1543_p2 = (zext_ln215_12_fu_1536_p1 + zext_ln215_13_fu_1539_p1);

assign add_ln1353_5_fu_1557_p2 = (zext_ln215_14_fu_1549_p1 + zext_ln215_15_fu_1553_p1);

assign add_ln1353_fu_1365_p2 = (zext_ln215_fu_1358_p1 + zext_ln215_1_fu_1361_p1);

assign add_ln331_fu_661_p2 = (indvar_flatten_reg_365 + 33'd1);

assign add_ln346_fu_675_p2 = (2'd1 + ap_phi_mux_read_rows_count_0_phi_fu_380_p4);

assign add_ln426_fu_1214_p2 = (zext_ln426_fu_1201_p1 + zext_ln426_1_fu_1210_p1);

assign add_ln484_fu_730_p2 = ($signed(32'd4294967295) + $signed(imgOutput_rows_read));

assign add_ln485_fu_844_p2 = ($signed(32'd4294967295) + $signed(read_rows_count_1_reg_398));

assign add_ln486_fu_850_p2 = ($signed(32'd4294967294) + $signed(read_rows_count_1_reg_398));

assign add_ln728_1_fu_793_p2 = ($signed(20'd1048575) + $signed(trunc_ln258_fu_790_p1));

assign add_ln728_fu_768_p2 = ($signed(20'd1048575) + $signed(trunc_ln241_fu_765_p1));

assign add_ln851_1_fu_1008_p2 = (17'd1 + tmp_5_fu_999_p4);

assign add_ln851_2_fu_1161_p2 = (17'd1 + tmp_7_reg_2349);

assign add_ln851_3_fu_1683_p2 = (8'd1 + trunc_ln7_fu_1673_p4);

assign add_ln851_4_fu_1753_p2 = (8'd1 + trunc_ln851_1_fu_1743_p4);

assign add_ln851_5_fu_1823_p2 = (8'd1 + trunc_ln851_2_fu_1813_p4);

assign add_ln851_fu_969_p2 = (17'd1 + tmp_3_fu_960_p4);

assign and_ln1494_fu_907_p2 = (xor_ln1495_fu_901_p2 & icmp_ln1494_fu_896_p2);

assign and_ln406_fu_1053_p2 = (xor_ln406_fu_1042_p2 & icmp_ln406_1_fu_1048_p2);

assign and_ln485_fu_1068_p2 = (icmp_ln879_2_fu_1063_p2 & icmp_ln403_reg_2240);

assign and_ln487_fu_1078_p2 = (icmp_ln879_3_fu_1073_p2 & grp_fu_557_p2);

assign and_ln507_fu_1868_p2 = (icmp_ln879_fu_1863_p2 & icmp_ln403_reg_2240);

assign and_ln891_fu_1944_p2 = (xor_ln511_fu_1939_p2 & icmp_ln891_fu_1909_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln331_reg_2129 == 1'd0) & (imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln331_reg_2129 == 1'd0) & (imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((imgOutput_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (ap_predicate_op398_write_state21 == 1'b1)) | ((imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op186_read_state14 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((imgOutput_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (ap_predicate_op398_write_state21 == 1'b1)) | ((imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op186_read_state14 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp137 = (((imgOutput_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (ap_predicate_op398_write_state21 == 1'b1)) | ((imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op186_read_state14 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((imgOutput_data_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b1) & (ap_predicate_op398_write_state21 == 1'b1)) | ((imgInput_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_predicate_op186_read_state14 == 1'b1)));
end

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter0_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2_ignore_call3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp1_stage0_iter3 = ((imgInput_data_V_empty_n == 1'b0) & (ap_predicate_op186_read_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp1_stage0_iter3_ignore_call3 = ((imgInput_data_V_empty_n == 1'b0) & (ap_predicate_op186_read_state14 == 1'b1));
end

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter6_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter7_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter8_ignore_call3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter9_ignore_call3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp1_stage0_iter10 = ((imgOutput_data_V_full_n == 1'b0) & (ap_predicate_op398_write_state21 == 1'b1));
end

always @ (*) begin
    ap_block_state21_pp1_stage0_iter10_ignore_call3 = ((imgOutput_data_V_full_n == 1'b0) & (ap_predicate_op398_write_state21 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((icmp_ln331_reg_2129 == 1'd0) & (imgInput_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_1867 = ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_1872 = ((icmp_ln441_reg_2272 == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter4_reg == 1'd0) & (icmp_ln420_reg_2254 == 1'd0));
end

always @ (*) begin
    ap_condition_1879 = ((icmp_ln387_reg_2303_pp1_iter4_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln420_reg_2254 == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1));
end

always @ (*) begin
    ap_condition_198 = ((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0));
end

always @ (*) begin
    ap_condition_203 = ((icmp_ln387_reg_2303_pp1_iter5_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0));
end

always @ (*) begin
    ap_condition_360 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001));
end

always @ (*) begin
    ap_condition_446 = ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln879_2_reg_2321_pp1_iter3_reg == 1'd0) & (icmp_ln441_reg_2272 == 1'd0) & (icmp_ln420_reg_2254 == 1'd0));
end

always @ (*) begin
    ap_condition_453 = ((icmp_ln387_reg_2303_pp1_iter3_reg == 1'd1) & (icmp_ln441_reg_2272 == 1'd1) & (icmp_ln420_reg_2254 == 1'd0));
end

always @ (*) begin
    ap_condition_723 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001));
end

always @ (*) begin
    ap_condition_743 = ((icmp_ln387_fu_940_p2 == 1'd1) & (icmp_ln403_reg_2240 == 1'd0) & (1'd0 == and_ln406_fu_1053_p2));
end

always @ (*) begin
    ap_condition_77 = ((1'd1 == and_ln406_reg_2317_pp1_iter2_reg) & (icmp_ln387_reg_2303_pp1_iter2_reg == 1'd1) & (icmp_ln403_reg_2240 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_flag_write_2_phi_fu_462_p6 = ap_phi_reg_pp1_iter4_flag_write_2_reg_457;

assign ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_507 = 'bx;

assign ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_496 = 'bx;

assign ap_phi_reg_pp1_iter0_flag_write_2_reg_457 = 'bx;

assign ap_phi_reg_pp1_iter6_P0Buf_0_V_3_reg_473 = 'bx;

assign ap_phi_reg_pp1_iter6_P0Buf_V_0_1_reg_485 = 'bx;

always @ (*) begin
    ap_predicate_op186_read_state14 = ((1'd1 == and_ln406_reg_2317_pp1_iter2_reg) & (icmp_ln387_reg_2303_pp1_iter2_reg == 1'd1) & (icmp_ln403_reg_2240 == 1'd0));
end

always @ (*) begin
    ap_predicate_op398_write_state21 = (((1'd1 == and_ln487_reg_2331_pp1_iter9_reg) & (1'd0 == and_ln485_reg_2327_pp1_iter9_reg) & (icmp_ln484_reg_2249 == 1'd0)) | ((icmp_ln487_1_reg_2335_pp1_iter9_reg == 1'd1) & (1'd1 == and_ln485_reg_2327_pp1_iter9_reg) & (icmp_ln484_reg_2249 == 1'd0)));
end

assign first_row_index_1_fu_1971_p3 = ((or_ln891_fu_1958_p2[0:0] === 1'b1) ? indexstores_reg_422 : select_ln891_fu_1963_p3);

assign first_row_index_fu_1914_p2 = (indexstores_reg_422 + 32'd1);

assign grp_fu_2004_p0 = zext_ln1118_2_fu_1596_p1;

assign grp_fu_2012_p0 = zext_ln1118_4_fu_1602_p1;

assign grp_fu_2021_p0 = zext_ln1118_2_fu_1596_p1;

assign grp_fu_2029_p0 = zext_ln1118_4_fu_1602_p1;

assign grp_fu_2038_p0 = zext_ln1118_2_fu_1596_p1;

assign grp_fu_2046_p0 = zext_ln1118_4_fu_1602_p1;

assign grp_fu_557_p2 = (($signed(ap_phi_mux_j13_0_phi_fu_449_p4) < $signed(imgOutput_cols_read)) ? 1'b1 : 1'b0);

assign grp_xfUDivResize_fu_518_ap_start = grp_xfUDivResize_fu_518_ap_start_reg;

assign i_fu_822_p2 = (i12_0_reg_434 + 32'd1);

assign icmp_ln1494_1_fu_1106_p2 = (($signed(zext_ln1494_1_fu_1102_p1) > $signed(shl_ln728_6_reg_2222)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_896_p2 = (($signed(zext_ln1494_fu_892_p1) > $signed(shl_ln728_3_reg_2212)) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_656_p2 = ((indvar_flatten_reg_365 == tmp_4_reg_2124) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_651_p2 = (($signed(zext_ln336_fu_647_p1) < $signed(imgInput_cols_read)) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_705_p2 = (($signed(imgOutput_rows_read) > $signed(imgInput_rows_read)) ? 1'b1 : 1'b0);

assign icmp_ln354_fu_715_p2 = (($signed(imgOutput_cols_read) > $signed(imgInput_cols_read)) ? 1'b1 : 1'b0);

assign icmp_ln380_fu_817_p2 = (($signed(i12_0_reg_434) < $signed(loop_row_count_reg_2182)) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_940_p2 = (($signed(ap_phi_mux_j13_0_phi_fu_449_p4) < $signed(loop_col_count_reg_2187)) ? 1'b1 : 1'b0);

assign icmp_ln403_fu_828_p2 = ((read_rows_count_1_reg_398 == imgInput_rows_read) ? 1'b1 : 1'b0);

assign icmp_ln406_1_fu_1048_p2 = (($signed(ap_phi_mux_j13_0_phi_fu_449_p4) < $signed(imgInput_cols_read)) ? 1'b1 : 1'b0);

assign icmp_ln406_fu_1037_p2 = (($signed(zext_ln891_fu_1033_p1) < $signed(add_ln485_reg_2258)) ? 1'b1 : 1'b0);

assign icmp_ln420_fu_838_p2 = ((indexstores_reg_422 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln426_fu_1205_p2 = ((zext_ln425_fu_1197_p1 != p_Val2_12_reg_2192) ? 1'b1 : 1'b0);

assign icmp_ln441_fu_856_p2 = ((indexstores_reg_422 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln484_fu_833_p2 = (($signed(output_rows_count_0_reg_410) > $signed(add_ln484_reg_2197)) ? 1'b1 : 1'b0);

assign icmp_ln520_fu_1920_p2 = ((first_row_index_fu_1914_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_1737_p2 = ((trunc_ln851_6_fu_1733_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_1807_p2 = ((trunc_ln851_7_fu_1803_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_954_p2 = ((trunc_ln851_fu_951_p1 == 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_4_fu_993_p2 = ((trunc_ln851_3_fu_990_p1 == 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_5_fu_1156_p2 = ((trunc_ln851_4_reg_2344 == 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_1667_p2 = ((trunc_ln851_5_fu_1663_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_1873_p2 = ((zext_ln879_fu_1859_p1 == add_ln486_reg_2266) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_1063_p2 = ((zext_ln879_1_fu_1059_p1 == add_ln485_reg_2258) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_1073_p2 = ((zext_ln879_1_fu_1059_p1 == add_ln486_reg_2266) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_1863_p2 = ((zext_ln879_fu_1859_p1 == add_ln485_reg_2258) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_1909_p2 = (($signed(zext_ln891_1_fu_1905_p1) < $signed(add_ln485_reg_2258)) ? 1'b1 : 1'b0);

assign imgOutput_data_V_din = {{{select_ln850_4_reg_2527}, {select_ln850_3_reg_2522}}, {select_ln850_reg_2517}};

assign indexx_0_V_fu_1173_p3 = ((tmp_12_fu_1149_p3[0:0] === 1'b1) ? select_ln851_2_fu_1166_p3 : tmp_7_reg_2349);

assign indexx_pre_V_fu_799_p3 = {{add_ln728_1_fu_793_p2}, {22'd0}};

assign indexy_pre_V_fu_774_p3 = {{add_ln728_fu_768_p2}, {22'd0}};

assign j_1_fu_945_p2 = ($signed(ap_phi_mux_j13_0_phi_fu_449_p4) + $signed(32'd1));

assign j_fu_699_p2 = (select_ln321_fu_667_p3 + 31'd1);

assign lhs_V_fu_862_p0 = grp_scaleCompute_fu_535_ap_return;

assign lhs_V_fu_862_p1 = lhs_V_fu_862_p0;

assign line_buffer_0_0_V_1_gep_fu_290_p3 = zext_ln428_fu_1220_p1;

assign line_buffer_1_0_V_1_gep_fu_297_p3 = zext_ln428_fu_1220_p1;

assign line_buffer_2_0_V_1_gep_fu_276_p3 = zext_ln428_fu_1220_p1;

assign loop_col_count_fu_719_p3 = ((icmp_ln354_fu_715_p2[0:0] === 1'b1) ? imgOutput_cols_read : imgInput_cols_read);

assign loop_row_count_fu_709_p3 = ((icmp_ln352_fu_705_p2[0:0] === 1'b1) ? imgOutput_rows_read : imgInput_rows_read);

assign mul_ln1118_2_fu_1986_p0 = zext_ln1118_3_fu_1415_p1;

assign mul_ln1118_5_fu_1992_p0 = zext_ln1118_3_fu_1415_p1;

assign mul_ln1118_8_fu_1998_p0 = zext_ln1118_3_fu_1415_p1;

assign mul_ln1118_fu_1979_p0 = mul_ln1118_fu_1979_p00;

assign mul_ln1118_fu_1979_p00 = trunc_ln6_fu_1320_p4;

assign mul_ln1118_fu_1979_p1 = mul_ln1118_fu_1979_p10;

assign mul_ln1118_fu_1979_p10 = trunc_ln708_1_reg_2398_pp1_iter6_reg;

assign nextYScale_V_fu_983_p3 = ((p_Result_s_reg_2282[0:0] === 1'b1) ? select_ln851_fu_975_p3 : tmp_3_fu_960_p4);

assign or_ln508_fu_1878_p2 = (icmp_ln879_1_fu_1873_p2 | and_ln507_fu_1868_p2);

assign or_ln891_fu_1958_p2 = (icmp_ln403_reg_2240 | and_ln891_fu_1944_p2);

assign output_rows_count_fu_1884_p2 = (output_rows_count_0_reg_410 + 32'd1);

assign p_Result_i_i_i_i33_2_fu_1419_p4 = {{P0Buf_0_V_3_reg_473[15:8]}};

assign p_Result_i_i_i_i33_3_fu_1439_p4 = {{ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507[15:8]}};

assign p_Result_i_i_i_i33_4_fu_1506_p4 = {{P0Buf_0_V_3_reg_473[23:16]}};

assign p_Result_i_i_i_i33_5_fu_1526_p4 = {{ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507[23:16]}};

assign p_Result_i_i_i_i35_3_fu_1429_p4 = {{select_ln488_fu_1313_p3[15:8]}};

assign p_Result_i_i_i_i35_5_fu_1516_p4 = {{select_ln488_fu_1313_p3[23:16]}};

assign p_Val2_12_fu_725_p2 = ($signed(32'd4294967295) + $signed(imgInput_cols_read));

assign p_Val2_6_fu_744_p1 = tmp_6_fu_735_p4;

assign p_Val2_8_fu_752_p2 = ($signed(32'd4294967295) + $signed(imgInput_rows_read));

assign p_Val2_9_fu_920_p3 = ((tmp_9_fu_884_p3[0:0] === 1'b1) ? 42'd0 : select_ln1494_fu_913_p3);

assign read_rows_count_2_fu_1932_p3 = ((icmp_ln403_reg_2240[0:0] === 1'b1) ? read_rows_count_1_reg_398 : read_rows_count_fu_1926_p2);

assign read_rows_count_3_fu_1950_p3 = ((and_ln891_fu_1944_p2[0:0] === 1'b1) ? read_rows_count_1_reg_398 : read_rows_count_2_fu_1932_p3);

assign read_rows_count_fu_1926_p2 = (read_rows_count_1_reg_398 + 32'd1);

assign ret_V_fu_871_p2 = ($signed(lhs_V_fu_862_p1) + $signed(rhs_V_reg_2207));

assign rhs_V_fu_748_p1 = tmp_6_fu_735_p4;

assign scalex_V_fu_632_p1 = grp_xfUDivResize_fu_518_ap_return[47:0];

assign scaley_V_fu_636_p1 = grp_xfUDivResize_fu_518_ap_return[47:0];

assign select_ln1494_fu_913_p2 = grp_scaleCompute_fu_535_ap_return;

assign select_ln1494_fu_913_p3 = ((and_ln1494_fu_907_p2[0:0] === 1'b1) ? indexy_pre_V_reg_2217 : select_ln1494_fu_913_p2);

assign select_ln1495_fu_1118_p3 = ((tmp_11_fu_1094_p3[0:0] === 1'b1) ? 42'd0 : select_ln257_fu_1111_p3);

assign select_ln257_fu_1111_p3 = ((icmp_ln1494_1_fu_1106_p2[0:0] === 1'b1) ? indexx_pre_V_reg_2227 : grp_scaleCompute_fu_535_ap_return);

assign select_ln321_1_fu_681_p3 = ((icmp_ln336_fu_651_p2[0:0] === 1'b1) ? ap_phi_mux_read_rows_count_0_phi_fu_380_p4 : add_ln346_fu_675_p2);

assign select_ln321_fu_667_p3 = ((icmp_ln336_fu_651_p2[0:0] === 1'b1) ? j_0_reg_387 : 31'd0);

assign select_ln488_1_fu_1270_p3 = ((icmp_ln879_2_reg_2321_pp1_iter5_reg[0:0] === 1'b1) ? ap_phi_mux_P0Buf_0_V_3_phi_fu_476_p6 : ap_phi_mux_P0Buf_V_0_1_phi_fu_488_p6);

assign select_ln488_fu_1313_p3 = ((icmp_ln879_2_reg_2321_pp1_iter6_reg[0:0] === 1'b1) ? ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507 : ap_phi_reg_pp1_iter7_P0Buf_V_1_1_reg_496);

assign select_ln506_fu_1898_p3 = ((icmp_ln484_reg_2249[0:0] === 1'b1) ? output_rows_count_0_reg_410 : select_ln507_fu_1890_p3);

assign select_ln507_fu_1890_p3 = ((or_ln508_fu_1878_p2[0:0] === 1'b1) ? output_rows_count_fu_1884_p2 : output_rows_count_0_reg_410);

assign select_ln850_3_fu_1767_p3 = ((tmp_14_fu_1725_p3[0:0] === 1'b1) ? select_ln851_4_fu_1759_p3 : trunc_ln851_1_fu_1743_p4);

assign select_ln850_4_fu_1837_p3 = ((tmp_15_fu_1795_p3[0:0] === 1'b1) ? select_ln851_5_fu_1829_p3 : trunc_ln851_2_fu_1813_p4);

assign select_ln850_fu_1697_p3 = ((tmp_13_fu_1655_p3[0:0] === 1'b1) ? select_ln851_3_fu_1689_p3 : trunc_ln7_fu_1673_p4);

assign select_ln851_1_fu_1014_p3 = ((icmp_ln851_4_fu_993_p2[0:0] === 1'b1) ? tmp_5_fu_999_p4 : add_ln851_1_fu_1008_p2);

assign select_ln851_2_fu_1166_p3 = ((icmp_ln851_5_fu_1156_p2[0:0] === 1'b1) ? tmp_7_reg_2349 : add_ln851_2_fu_1161_p2);

assign select_ln851_3_fu_1689_p3 = ((icmp_ln851_fu_1667_p2[0:0] === 1'b1) ? trunc_ln7_fu_1673_p4 : add_ln851_3_fu_1683_p2);

assign select_ln851_4_fu_1759_p3 = ((icmp_ln851_1_fu_1737_p2[0:0] === 1'b1) ? trunc_ln851_1_fu_1743_p4 : add_ln851_4_fu_1753_p2);

assign select_ln851_5_fu_1829_p3 = ((icmp_ln851_2_fu_1807_p2[0:0] === 1'b1) ? trunc_ln851_2_fu_1813_p4 : add_ln851_5_fu_1823_p2);

assign select_ln851_fu_975_p3 = ((icmp_ln851_3_fu_954_p2[0:0] === 1'b1) ? tmp_3_fu_960_p4 : add_ln851_fu_969_p2);

assign select_ln891_fu_1963_p3 = ((icmp_ln520_fu_1920_p2[0:0] === 1'b1) ? 32'd0 : first_row_index_fu_1914_p2);

assign sext_ln438_fu_1240_p1 = j13_0_reg_445_pp1_iter3_reg;

assign sext_ln459_fu_1235_p1 = j13_0_reg_445_pp1_iter3_reg;

assign sext_ln480_fu_1230_p1 = j13_0_reg_445_pp1_iter3_reg;

assign sext_ln703_1_fu_1642_p1 = add_ln1192_1_reg_2502;

assign sext_ln703_3_fu_1712_p1 = add_ln1192_4_reg_2507;

assign sext_ln703_5_fu_1782_p1 = add_ln1192_7_reg_2512;

assign shl_ln1_fu_1635_p3 = {{trunc_ln647_reg_2434_pp1_iter8_reg}, {10'd0}};

assign shl_ln728_1_fu_1705_p3 = {{p_Result_i_i_i_i35_2_reg_2440_pp1_iter8_reg}, {10'd0}};

assign shl_ln728_2_fu_1775_p3 = {{p_Result_i_i_i_i35_4_reg_2446_pp1_iter8_reg}, {10'd0}};

assign shl_ln728_3_fu_757_p3 = {{p_Val2_8_fu_752_p2}, {22'd0}};

assign shl_ln728_5_fu_1301_p3 = {{trunc_ln728_1_reg_2312_pp1_iter6_reg}, {22'd0}};

assign shl_ln728_6_fu_782_p3 = {{p_Val2_12_fu_725_p2}, {22'd0}};

assign shl_ln_fu_1184_p3 = {{trunc_ln396_fu_1180_p1}, {22'd0}};

assign sub_ln1354_1_fu_1399_p2 = (zext_ln215_2_fu_1371_p1 - zext_ln215_fu_1358_p1);

assign sub_ln1354_2_fu_1405_p2 = (zext_ln215_3_fu_1375_p1 - zext_ln215_fu_1358_p1);

assign sub_ln1354_3_fu_1484_p2 = (zext_ln215_10_fu_1476_p1 - zext_ln215_11_fu_1480_p1);

assign sub_ln1354_4_fu_1490_p2 = (zext_ln215_8_fu_1462_p1 - zext_ln215_6_fu_1449_p1);

assign sub_ln1354_5_fu_1496_p2 = (zext_ln215_9_fu_1466_p1 - zext_ln215_6_fu_1449_p1);

assign sub_ln1354_6_fu_1571_p2 = (zext_ln215_16_fu_1563_p1 - zext_ln215_17_fu_1567_p1);

assign sub_ln1354_7_fu_1577_p2 = (zext_ln215_14_fu_1549_p1 - zext_ln215_12_fu_1536_p1);

assign sub_ln1354_8_fu_1583_p2 = (zext_ln215_15_fu_1553_p1 - zext_ln215_12_fu_1536_p1);

assign sub_ln1354_fu_1393_p2 = (zext_ln215_4_fu_1385_p1 - zext_ln215_5_fu_1389_p1);

assign sub_ln396_fu_1192_p2 = (trunc_ln396_1_reg_2356 - shl_ln_fu_1184_p3);

assign sub_ln728_fu_1308_p2 = (trunc_ln728_reg_2298 - shl_ln728_5_fu_1301_p3);

assign tmp_11_fu_1094_p3 = grp_scaleCompute_fu_535_ap_return[32'd41];

assign tmp_12_fu_1149_p3 = select_ln1495_reg_2339[32'd41];

assign tmp_13_fu_1655_p3 = add_ln1192_2_fu_1649_p2[32'd23];

assign tmp_14_fu_1725_p3 = add_ln1192_5_fu_1719_p2[32'd23];

assign tmp_15_fu_1795_p3 = add_ln1192_8_fu_1789_p2[32'd23];

assign tmp_3_fu_960_p4 = {{add_ln1192_reg_2276[38:22]}};

assign tmp_4_fu_640_p3 = {{imgInput_cols_read}, {1'd0}};

assign tmp_5_fu_999_p4 = {{p_Val2_9_reg_2287[38:22]}};

assign tmp_6_fu_735_p4 = {{Yscale64_reg_2114[47:10]}};

assign tmp_9_fu_884_p1 = grp_scaleCompute_fu_535_ap_return;

assign tmp_9_fu_884_p3 = tmp_9_fu_884_p1[32'd41];

assign tmp_V_fu_1022_p3 = ((p_Result_1_reg_2293[0:0] === 1'b1) ? select_ln851_1_fu_1014_p3 : tmp_5_fu_999_p4);

assign trunc_ln241_fu_765_p1 = imgInput_rows_read[19:0];

assign trunc_ln258_fu_790_p1 = imgInput_cols_read[19:0];

assign trunc_ln304_fu_613_p1 = imgOutput_cols_read[15:0];

assign trunc_ln305_fu_627_p1 = imgOutput_rows_read[15:0];

assign trunc_ln321_fu_689_p1 = select_ln321_1_fu_681_p3[0:0];

assign trunc_ln396_1_fu_1140_p1 = select_ln1495_fu_1118_p3[23:0];

assign trunc_ln396_fu_1180_p1 = indexx_0_V_fu_1173_p3[1:0];

assign trunc_ln647_1_fu_1330_p1 = P0Buf_0_V_3_reg_473[7:0];

assign trunc_ln647_2_fu_1334_p1 = select_ln488_fu_1313_p3[7:0];

assign trunc_ln647_3_fu_1338_p1 = ap_phi_reg_pp1_iter7_P0Buf_1_V_3_reg_507[7:0];

assign trunc_ln647_fu_1277_p1 = select_ln488_1_fu_1270_p3[7:0];

assign trunc_ln6_fu_1320_p4 = {{sub_ln728_fu_1308_p2[23:12]}};

assign trunc_ln728_1_fu_1029_p1 = tmp_V_fu_1022_p3[1:0];

assign trunc_ln728_fu_936_p1 = p_Val2_9_fu_920_p3[23:0];

assign trunc_ln7_fu_1673_p4 = {{add_ln1192_2_fu_1649_p2[17:10]}};

assign trunc_ln851_1_fu_1743_p4 = {{add_ln1192_5_fu_1719_p2[17:10]}};

assign trunc_ln851_2_fu_1813_p4 = {{add_ln1192_8_fu_1789_p2[17:10]}};

assign trunc_ln851_3_fu_990_p1 = p_Val2_9_reg_2287[21:0];

assign trunc_ln851_4_fu_1126_p1 = select_ln1495_fu_1118_p3[21:0];

assign trunc_ln851_5_fu_1663_p1 = add_ln1192_2_fu_1649_p2[9:0];

assign trunc_ln851_6_fu_1733_p1 = add_ln1192_5_fu_1719_p2[9:0];

assign trunc_ln851_7_fu_1803_p1 = add_ln1192_8_fu_1789_p2[9:0];

assign trunc_ln851_fu_951_p1 = add_ln1192_reg_2276[21:0];

assign xnew_fu_604_p3 = {{imgInput_cols_read}, {32'd0}};

assign xor_ln1495_fu_901_p2 = (tmp_9_fu_884_p3 ^ 1'd1);

assign xor_ln406_fu_1042_p2 = (icmp_ln406_fu_1037_p2 ^ 1'd1);

assign xor_ln511_fu_1939_p2 = (icmp_ln403_reg_2240 ^ 1'd1);

assign ynew_fu_618_p3 = {{imgInput_rows_read}, {32'd0}};

assign zext_ln1118_2_fu_1596_p1 = trunc_ln708_2_reg_2452;

assign zext_ln1118_3_fu_1415_p1 = trunc_ln6_fu_1320_p4;

assign zext_ln1118_4_fu_1602_p1 = trunc_ln708_1_reg_2398_pp1_iter7_reg;

assign zext_ln1192_1_fu_1715_p1 = shl_ln728_1_fu_1705_p3;

assign zext_ln1192_2_fu_1785_p1 = shl_ln728_2_fu_1775_p3;

assign zext_ln1192_fu_1645_p1 = shl_ln1_fu_1635_p3;

assign zext_ln1494_1_fu_1102_p1 = grp_scaleCompute_fu_535_ap_return;

assign zext_ln1494_fu_892_p0 = grp_scaleCompute_fu_535_ap_return;

assign zext_ln1494_fu_892_p1 = $unsigned(zext_ln1494_fu_892_p0);

assign zext_ln215_10_fu_1476_p1 = add_ln1353_2_fu_1456_p2;

assign zext_ln215_11_fu_1480_p1 = add_ln1353_3_fu_1470_p2;

assign zext_ln215_12_fu_1536_p1 = p_Result_i_i_i_i35_4_reg_2446;

assign zext_ln215_13_fu_1539_p1 = p_Result_i_i_i_i33_5_fu_1526_p4;

assign zext_ln215_14_fu_1549_p1 = p_Result_i_i_i_i33_4_fu_1506_p4;

assign zext_ln215_15_fu_1553_p1 = p_Result_i_i_i_i35_5_fu_1516_p4;

assign zext_ln215_16_fu_1563_p1 = add_ln1353_4_fu_1543_p2;

assign zext_ln215_17_fu_1567_p1 = add_ln1353_5_fu_1557_p2;

assign zext_ln215_1_fu_1361_p1 = trunc_ln647_3_fu_1338_p1;

assign zext_ln215_2_fu_1371_p1 = trunc_ln647_1_fu_1330_p1;

assign zext_ln215_3_fu_1375_p1 = trunc_ln647_2_fu_1334_p1;

assign zext_ln215_4_fu_1385_p1 = add_ln1353_fu_1365_p2;

assign zext_ln215_5_fu_1389_p1 = add_ln1353_1_fu_1379_p2;

assign zext_ln215_6_fu_1449_p1 = p_Result_i_i_i_i35_2_reg_2440;

assign zext_ln215_7_fu_1452_p1 = p_Result_i_i_i_i33_3_fu_1439_p4;

assign zext_ln215_8_fu_1462_p1 = p_Result_i_i_i_i33_2_fu_1419_p4;

assign zext_ln215_9_fu_1466_p1 = p_Result_i_i_i_i35_3_fu_1429_p4;

assign zext_ln215_fu_1358_p1 = trunc_ln647_reg_2434;

assign zext_ln336_fu_647_p1 = j_0_reg_387;

assign zext_ln342_fu_693_p1 = select_ln321_fu_667_p3;

assign zext_ln425_fu_1197_p1 = indexx_0_V_fu_1173_p3;

assign zext_ln426_1_fu_1210_p1 = icmp_ln426_fu_1205_p2;

assign zext_ln426_fu_1201_p1 = indexx_0_V_fu_1173_p3;

assign zext_ln428_fu_1220_p1 = indexx_0_V_fu_1173_p3;

assign zext_ln429_fu_1265_p1 = add_ln426_reg_2361;

assign zext_ln450_fu_1260_p1 = add_ln426_reg_2361;

assign zext_ln471_fu_1255_p1 = add_ln426_reg_2361;

assign zext_ln879_1_fu_1059_p1 = tmp_V_fu_1022_p3;

assign zext_ln879_fu_1859_p1 = indexy_V_fu_174;

assign zext_ln891_1_fu_1905_p1 = nextYScale_V_1_fu_178;

assign zext_ln891_fu_1033_p1 = nextYScale_V_fu_983_p3;

always @ (posedge ap_clk) begin
    xnew_reg_2073[31:0] <= 32'b00000000000000000000000000000000;
    ynew_reg_2099[31:0] <= 32'b00000000000000000000000000000000;
    tmp_4_reg_2124[0] <= 1'b0;
    p_Val2_6_reg_2202[41:38] <= 4'b0000;
    rhs_V_reg_2207[42:38] <= 5'b00000;
    shl_ln728_3_reg_2212[21:0] <= 22'b0000000000000000000000;
    indexy_pre_V_reg_2217[21:0] <= 22'b0000000000000000000000;
    shl_ln728_6_reg_2222[21:0] <= 22'b0000000000000000000000;
    indexx_pre_V_reg_2227[21:0] <= 22'b0000000000000000000000;
end

endmodule //resizeNNBilinear
